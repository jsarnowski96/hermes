[{"D:\\studia\\PRACA DYPLOMOWA\\hermes\\client\\src\\index.js":"1","D:\\studia\\PRACA DYPLOMOWA\\hermes\\client\\src\\components\\App.js":"2","D:\\studia\\PRACA DYPLOMOWA\\hermes\\client\\src\\components\\Nav\\Contact.js":"3","D:\\studia\\PRACA DYPLOMOWA\\hermes\\client\\src\\components\\Nav\\About.js":"4","D:\\studia\\PRACA DYPLOMOWA\\hermes\\client\\src\\components\\Nav\\Home.js":"5","D:\\studia\\PRACA DYPLOMOWA\\hermes\\client\\src\\components\\Nav\\Register.js":"6","D:\\studia\\PRACA DYPLOMOWA\\hermes\\client\\src\\components\\Nav\\Sidebar.js":"7","D:\\studia\\PRACA DYPLOMOWA\\hermes\\client\\src\\components\\Dashboard\\Dashboard.js":"8","D:\\studia\\PRACA DYPLOMOWA\\hermes\\client\\src\\components\\Nav\\Login.js":"9","D:\\studia\\PRACA DYPLOMOWA\\hermes\\client\\src\\components\\Project\\Project.js":"10","D:\\studia\\PRACA DYPLOMOWA\\hermes\\client\\src\\services\\i18n.js":"11","D:\\studia\\PRACA DYPLOMOWA\\hermes\\client\\src\\middleware\\jwtSessionStorage.js":"12","D:\\studia\\PRACA DYPLOMOWA\\hermes\\client\\src\\middleware\\languageLocalStorage.js":"13","D:\\studia\\PRACA DYPLOMOWA\\hermes\\client\\src\\components\\Project\\CreateProject.js":"14","D:\\studia\\PRACA DYPLOMOWA\\hermes\\client\\src\\components\\Dashboard\\RecentActivity.js":"15","D:\\studia\\PRACA DYPLOMOWA\\hermes\\client\\src\\components\\Task\\CreateTask.js":"16","D:\\studia\\PRACA DYPLOMOWA\\hermes\\client\\src\\components\\Dashboard\\UserActions.js":"17","D:\\studia\\PRACA DYPLOMOWA\\hermes\\client\\src\\components\\Project\\ProjectList.js":"18","D:\\studia\\PRACA DYPLOMOWA\\hermes\\client\\src\\components\\Team\\TeamList.js":"19","D:\\studia\\PRACA DYPLOMOWA\\hermes\\client\\src\\components\\Task\\TaskList.js":"20","D:\\studia\\PRACA DYPLOMOWA\\hermes\\client\\src\\components\\Company\\CreateCompany.js":"21","D:\\studia\\PRACA DYPLOMOWA\\hermes\\client\\src\\components\\Team\\CreateTeam.js":"22","D:\\studia\\PRACA DYPLOMOWA\\hermes\\client\\src\\components\\Repository\\CreateRepository.js":"23","D:\\studia\\PRACA DYPLOMOWA\\hermes\\client\\src\\components\\Role\\CreateRole.js":"24","D:\\studia\\PRACA DYPLOMOWA\\hermes\\client\\src\\components\\Repository\\RepositoryList.js":"25","D:\\studia\\PRACA DYPLOMOWA\\hermes\\client\\src\\components\\User\\UserList.js":"26","D:\\studia\\PRACA DYPLOMOWA\\hermes\\client\\src\\components\\Comment\\CreateComment.js":"27","D:\\studia\\PRACA DYPLOMOWA\\hermes\\client\\src\\components\\Comment\\CommentList.js":"28","D:\\studia\\PRACA DYPLOMOWA\\hermes\\client\\src\\components\\Company\\CompanyList.js":"29","D:\\studia\\PRACA DYPLOMOWA\\hermes\\client\\src\\components\\Role\\RoleList.js":"30","D:\\studia\\PRACA DYPLOMOWA\\hermes\\client\\src\\components\\NotFound.js":"31","D:\\studia\\PRACA DYPLOMOWA\\hermes\\client\\src\\components\\Project\\EditProject.js":"32","D:\\studia\\PRACA DYPLOMOWA\\hermes\\client\\src\\components\\Company\\EditCompany.js":"33","D:\\studia\\PRACA DYPLOMOWA\\hermes\\client\\src\\components\\Comment\\EditComment.js":"34","D:\\studia\\PRACA DYPLOMOWA\\hermes\\client\\src\\components\\Task\\EditTask.js":"35","D:\\studia\\PRACA DYPLOMOWA\\hermes\\client\\src\\components\\Team\\EditTeam.js":"36","D:\\studia\\PRACA DYPLOMOWA\\hermes\\client\\src\\components\\Role\\EditRole.js":"37","D:\\studia\\PRACA DYPLOMOWA\\hermes\\client\\src\\components\\Repository\\EditRepository.js":"38","D:\\studia\\PRACA DYPLOMOWA\\hermes\\client\\src\\components\\Comment\\Comment.js":"39","D:\\studia\\PRACA DYPLOMOWA\\hermes\\client\\src\\components\\Company\\Company.js":"40","D:\\studia\\PRACA DYPLOMOWA\\hermes\\client\\src\\components\\Team\\Team.js":"41","D:\\studia\\PRACA DYPLOMOWA\\hermes\\client\\src\\components\\Repository\\Repository.js":"42","D:\\studia\\PRACA DYPLOMOWA\\hermes\\client\\src\\components\\Role\\Role.js":"43"},{"size":461,"mtime":1613584887704,"results":"44","hashOfConfig":"45"},{"size":5399,"mtime":1613663660592,"results":"46","hashOfConfig":"45"},{"size":1039,"mtime":1613663166179,"results":"47","hashOfConfig":"45"},{"size":1029,"mtime":1613663157739,"results":"48","hashOfConfig":"45"},{"size":25143,"mtime":1613663175243,"results":"49","hashOfConfig":"45"},{"size":13739,"mtime":1613663084991,"results":"50","hashOfConfig":"45"},{"size":4866,"mtime":1613512486265,"results":"51","hashOfConfig":"45"},{"size":3504,"mtime":1613663127399,"results":"52","hashOfConfig":"45"},{"size":7807,"mtime":1613663182431,"results":"53","hashOfConfig":"45"},{"size":1089,"mtime":1613663686094,"results":"54","hashOfConfig":"45"},{"size":410,"mtime":1609945680158,"results":"55","hashOfConfig":"45"},{"size":1306,"mtime":1613339588420,"results":"56","hashOfConfig":"45"},{"size":434,"mtime":1613071751491,"results":"57","hashOfConfig":"45"},{"size":6662,"mtime":1613661350742,"results":"58","hashOfConfig":"45"},{"size":2857,"mtime":1613663138167,"results":"59","hashOfConfig":"45"},{"size":6650,"mtime":1613661365416,"results":"60","hashOfConfig":"45"},{"size":3201,"mtime":1613663150059,"results":"61","hashOfConfig":"45"},{"size":3334,"mtime":1613663225206,"results":"62","hashOfConfig":"45"},{"size":2660,"mtime":1613659351303,"results":"63","hashOfConfig":"45"},{"size":2793,"mtime":1613659365638,"results":"64","hashOfConfig":"45"},{"size":6747,"mtime":1613660816304,"results":"65","hashOfConfig":"45"},{"size":6650,"mtime":1613661369911,"results":"66","hashOfConfig":"45"},{"size":6703,"mtime":1613661355852,"results":"67","hashOfConfig":"45"},{"size":6650,"mtime":1613661360893,"results":"68","hashOfConfig":"45"},{"size":2821,"mtime":1613663246527,"results":"69","hashOfConfig":"45"},{"size":2787,"mtime":1613659357049,"results":"70","hashOfConfig":"45"},{"size":0,"mtime":1613661554197,"results":"71","hashOfConfig":"45"},{"size":0,"mtime":1613661568040,"results":"72","hashOfConfig":"45"},{"size":0,"mtime":1613659382797,"results":"73","hashOfConfig":"45"},{"size":0,"mtime":1613661720202,"results":"74","hashOfConfig":"45"},{"size":0,"mtime":1613661824877,"results":"75","hashOfConfig":"45"},{"size":0,"mtime":1608485921977,"results":"76","hashOfConfig":"45"},{"size":0,"mtime":1613506362952,"results":"77","hashOfConfig":"45"},{"size":0,"mtime":1613661559269,"results":"78","hashOfConfig":"45"},{"size":0,"mtime":1608485936270,"results":"79","hashOfConfig":"45"},{"size":0,"mtime":1608485943008,"results":"80","hashOfConfig":"45"},{"size":0,"mtime":1613659319637,"results":"81","hashOfConfig":"45"},{"size":0,"mtime":1608485971476,"results":"82","hashOfConfig":"45"},{"size":1054,"mtime":1613663758517,"results":"83","hashOfConfig":"45"},{"size":1056,"mtime":1613663753997,"results":"84","hashOfConfig":"45"},{"size":1074,"mtime":1613663730262,"results":"85","hashOfConfig":"45"},{"size":1104,"mtime":1613663744341,"results":"86","hashOfConfig":"45"},{"size":1074,"mtime":1613663739670,"results":"87","hashOfConfig":"45"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},"1ldetr1",{"filePath":"91","messages":"92","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"90"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"90"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"90"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"90"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"90"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"90"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"90"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"174","messages":"175","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"176","messages":"177","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"178","messages":"179","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"180","messages":"181","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\studia\\PRACA DYPLOMOWA\\hermes\\client\\src\\index.js",[],["182","183"],"D:\\studia\\PRACA DYPLOMOWA\\hermes\\client\\src\\components\\App.js",["184","185","186","187","188"],"D:\\studia\\PRACA DYPLOMOWA\\hermes\\client\\src\\components\\Nav\\Contact.js",[],"D:\\studia\\PRACA DYPLOMOWA\\hermes\\client\\src\\components\\Nav\\About.js",[],"D:\\studia\\PRACA DYPLOMOWA\\hermes\\client\\src\\components\\Nav\\Home.js",[],"D:\\studia\\PRACA DYPLOMOWA\\hermes\\client\\src\\components\\Nav\\Register.js",["189","190"],"import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {withTranslation} from 'react-i18next';\r\nimport axios from 'axios';\r\n\r\nimport '../../assets/css/register.css';\r\nimport '../../assets/css/style.css';\r\nimport '../../assets/css/errors.css';\r\n\r\nimport {getJwtDataFromSessionStorage} from '../../middleware/jwtSessionStorage';\r\n\r\nclass Register extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        \r\n        var jwt = getJwtDataFromSessionStorage();\r\n\r\n        if(jwt != null) {\r\n            this.state = {\r\n                authenticated: true,\r\n                fields: {},\r\n                errors: {}\r\n            };\r\n        } else {\r\n            this.state = {\r\n                authenticated: false,\r\n                fields: {},\r\n                errors: {}\r\n            };\r\n        }\r\n\r\n        this.resetForm = this.resetForm.bind(this);\r\n    }\r\n\r\n    resetForm() {\r\n        document.getElementById('serverResponse').innerHTML = '';\r\n        this.setState({fields: {}, errors: {}});\r\n    }\r\n\r\n    onChange(field, event) {\r\n        let fields = this.state.fields;\r\n        let errors = this.state.errors;\r\n        fields[field] = event.target.value;       \r\n        errors[field] = '';\r\n        this.setState({fields});\r\n    }\r\n\r\n    validateForm() {\r\n        let fields = this.state.fields;\r\n        let errors = this.state.errors;\r\n        let isValid = true;\r\n        const {t} = this.props;\r\n\r\n        if(!fields['firstname']) {\r\n            isValid = false;\r\n            errors['firstname'] = t('misc.phrases.field') + ' \\'' + t('content.register.firstname') + '\\' ' + t('content.register.errorMessages.formValidation.requiredFieldIsEmpty');\r\n        } else if(typeof fields['firstname'] !== undefined) {\r\n            if(!fields['firstname'].match(/^[ążśźęćńółĄŻŚŹĘĆŃÓŁa-zA-Z\\- ]{1,20}$/)) {\r\n                let regex = /^[ążśźęćńółĄŻŚŹĘĆŃÓŁa-zA-Z\\- ]{1,20}$/;\r\n                isValid = false;\r\n                errors['firstname'] = t('content.register.errorMessages.formValidation.allowedCharsOnly') + regex;\r\n            }\r\n        }\r\n\r\n        if(!fields['lastname']) {\r\n            isValid = false;\r\n            errors['lastname'] = t('misc.phrases.field') + ' \\'' + t('content.register.lastname') + '\\' ' + t('content.register.errorMessages.formValidation.requiredFieldIsEmpty');\r\n        } else if(typeof fields['lastname'] !== undefined) {\r\n            if(!fields['lastname'].match(/^[ążśźęćńółĄŻŚŹĘĆŃÓŁa-zA-Z\\- ]{1,20}$/)) {\r\n                let regex = /^[ążśźęćńółĄŻŚŹĘĆŃÓŁa-zA-Z\\- ]{1,20}$/;\r\n                isValid = false;\r\n                errors['lastname'] = t('content.register.errorMessages.formValidation.allowedCharsOnly') + regex;\r\n            }\r\n        }\r\n\r\n        if(!fields['username']) {\r\n            isValid = false;\r\n            errors['username'] = t('misc.phrases.field') + ' \\'' + t('content.register.username') + '\\' ' + t('content.register.errorMessages.formValidation.requiredFieldIsEmpty');\r\n        } else if(typeof fields['username'] !== undefined) {\r\n            if(!fields['username'].match(/^[a-zA-Z0-9\\-_.]+$/)) {\r\n                let regex = /^[a-zA-Z0-9\\-_.]+$/;\r\n                isValid = false;\r\n                errors['username'] = t('content.register.errorMessages.formValidation.allowedCharsOnly') + regex;\r\n            }\r\n        }\r\n\r\n        if(!fields['email']) {\r\n            isValid = false;\r\n            errors['email'] = t('misc.phrases.field') + ' \\'' + t('content.register.email') + '\\' ' + t('content.register.errorMessages.formValidation.requiredFieldIsEmpty');\r\n        } else if(typeof fields['email'] != undefined) {\r\n            if(!fields['email'].match(/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/) && !fields['email'].match(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/)) {\r\n                isValid = false;\r\n                errors['email'] = t('content.register.errorMessages.formValidation.emailNotValid');\r\n            }\r\n        }\r\n\r\n        if(!fields['phone']) {\r\n            isValid = false;\r\n            errors['phone'] = t('misc.phrases.field') + ' \\'' + t('content.register.phone') + '\\' ' + t('content.register.errorMessages.formValidation.requiredFieldIsEmpty');\r\n        } else if(typeof fields['phone'] != undefined) {\r\n            if(!fields['phone'].match(/^\\+?([0-9]{2})\\)?[-. ]?([0-9]{3})[-. ]?([0-9]{3}?[-. ]?([0-9]{3}))$/) && !fields['phone'].match(/^\\(?([0-9]{3})\\)?[-. ]?([0-9]{3})[-. ]?([0-9]{3})$/) && !fields['phone'].match(/^([0-9]{9})$/)) {\r\n                let regex1 = 'yy xxx xxx xxx';\r\n                let regex2 = 'xxx xxx xxx';\r\n                let regex3 = 'xxxxxxxxx';\r\n                isValid = false;\r\n                errors['phone'] = t('content.register.errorMessages.formValidation.incorrectPhoneNumberFormat') + '\\n\\n' + regex1 + ', ' + regex2 + ' ' + t('misc.phrases.or') + ' ' + regex3;\r\n            }\r\n        }\r\n\r\n        if(!fields['position']) {\r\n            isValid = false;\r\n            errors['position'] = t('misc.phrases.field') + ' \\'' + t('content.register.position') + '\\' ' +  t('content.register.errorMessages.formValidation.requiredFieldIsEmpty');\r\n        } else if(typeof fields['position'] !== undefined) {\r\n            if(!fields['position'].match(/^[ążśźęćńółĄŻŚŹĘĆŃÓŁa-zA-Z\\- ]{1,30}$/)) {\r\n                let regex = /^[ążśźęćńółĄŻŚŹĘĆŃÓŁa-zA-Z\\- ]{1,30}$/;\r\n                isValid = false;\r\n                errors['position'] = t('content.register.errorMessages.formValidation.allowedCharsOnly') + regex;\r\n            }\r\n        }\r\n\r\n        if(!fields['company']) {\r\n            isValid = false;\r\n            errors['company'] = t('misc.phrases.field') + ' \\'' + t('content.register.company') + '\\' ' + t('content.register.errorMessages.formValidation.requiredFieldIsEmpty');\r\n        } else if(typeof fields['company'] !== undefined) {\r\n            if(!fields['company'].match(/^[ążśźęćńółĄŻŚŹĘĆŃÓŁA-Za-z0-9!@#$%^&*()_+\\-=,./;'\\\\[\\]<>?:\"|{} ]{1,50}$/)) {\r\n                let regex = /^[ążśźęćńółĄŻŚŹĘĆŃÓŁA-Za-z0-9!@#$%^&*()_+\\-=,./;'\\\\[\\]<>?:\"|{} ]{1,50}$/;\r\n                isValid = false;\r\n                errors['company'] = t('content.register.errorMessages.formValidation.allowedCharsOnly') + regex;\r\n            }\r\n        }\r\n\r\n        if(!fields['password']) {\r\n            isValid = false;\r\n            errors['password'] = t('misc.phrases.field') + ' \\'' + t('content.register.password') + '\\' ' + t('content.register.errorMessages.formValidation.requiredFieldIsEmpty');\r\n        } else if(typeof fields['password'] !== undefined) {\r\n            if(fields['password'].length < 6) {\r\n                isValid = false;\r\n                errors['password'] = t('content.register.errorMessages.formValidation.passwordTooShort');\r\n            }\r\n            if(fields['password'] !== fields['confirm']) {\r\n                isValid = false;\r\n                errors['password'] = t('content.register.errorMessages.formValidation.passwordsDoNotMatch');\r\n            }\r\n        }\r\n\r\n        if(!fields['confirm']) {\r\n            isValid = false;\r\n            errors['confirm'] = t('content.register.errorMessages.formValidation.confirmPasswordIsEmpty');\r\n        } else if(typeof fields['confirm'] !== undefined) {\r\n            if(fields['confirm'] !== fields['password']) {\r\n                isValid = false;\r\n                errors['confirm'] = t('content.register.errorMessages.formValidation.passwordsDoNotMatch');\r\n            }\r\n        }\r\n\r\n        this.setState({errors: errors});\r\n\r\n        return isValid;\r\n    }\r\n\r\n    onFormSubmit = (event, errors) => {\r\n        event.preventDefault();\r\n        const fields = this.state.fields;\r\n        const {t} = this.props;\r\n\r\n        if(this.validateForm()) {\r\n            axios.post('http://localhost:3300/register', {\r\n                firstname: fields['firstname'],\r\n                lastname: fields['lastname'],\r\n                username: fields['username'],\r\n                email: fields['email'],\r\n                phone: fields['phone'],\r\n                position: fields['position'],\r\n                company: fields['company'],\r\n                password: fields['password']\r\n            }).then((response) => {\r\n                console.log(response);\r\n            })\r\n            .catch(error => {\r\n                let err = document.getElementById('serverResponse');\r\n                if(error) {\r\n                    if(error.response.data.type === 'AccountDuplication') {\r\n                        err.innerHTML = t('content.register.errorMessages.userAlreadyExists');\r\n                        err.style.display = 'block';\r\n                    } else {\r\n                        err.innerHTML = error.response;\r\n                    }\r\n                }\r\n            });\r\n        } else {\r\n            let errors = document.querySelectorAll('.error-msg-span');\r\n            for(var i = 0; i < errors.length; i++) {\r\n                errors[i].style.display = 'block';\r\n            }\r\n        }\r\n    }\r\n        \r\n    render() {\r\n        const {t} = this.props;\r\n\r\n        return(\r\n            <div className=\"card\">\r\n                <p className=\"card-title\">{t('content.register.title')}</p><hr className=\"card-hr\" />\r\n                <form className=\"card-form\" onSubmit={this.onFormSubmit}>\r\n                    <label htmlFor=\"firstname\">{t('content.register.firstname')}</label>\r\n                    <input onChange={this.onChange.bind(this, 'firstname')} value={this.state.fields['firstname']} type=\"firstname\" className=\"\" name=\"firstname\" />\r\n                    <span className=\"error-msg-span\">{this.state.errors[\"firstname\"]}</span>\r\n                    <label htmlFor=\"lastname\">{t('content.register.lastname')}</label>\r\n                    <input onChange={this.onChange.bind(this, 'lastname')} value={this.state.fields['lastname']} type=\"lastname\" className=\"\" name=\"lastname\" />\r\n                    <span className=\"error-msg-span\">{this.state.errors[\"lastname\"]}</span>\r\n                    <label htmlFor=\"username\">{t('content.register.username')}</label>\r\n                    <input onChange={this.onChange.bind(this, 'username')} value={this.state.fields['username']} type=\"username\" className=\"\" name=\"username\" />\r\n                    <span className=\"error-msg-span\">{this.state.errors[\"username\"]}</span>\r\n                    <label htmlFor=\"email\">{t('content.register.email')}</label>\r\n                    <input onChange={this.onChange.bind(this, 'email')} value={this.state.fields['email']} type=\"email\" className=\"\" name=\"email\" />\r\n                    <span className=\"error-msg-span\">{this.state.errors[\"email\"]}</span>\r\n                    <label htmlFor=\"phone\">{t('content.register.phone')}</label>\r\n                    <input onChange={this.onChange.bind(this, 'phone')} value={this.state.fields['phone']} type=\"phone\" className=\"\" name=\"phone\" />\r\n                    <span className=\"error-msg-span\">{this.state.errors[\"phone\"]}</span>\r\n                    <label htmlFor=\"position\">{t('content.register.position')}</label>\r\n                    <input onChange={this.onChange.bind(this, 'position')} value={this.state.fields['position']} type=\"position\" className=\"\" name=\"position\" />\r\n                    <span className=\"error-msg-span\">{this.state.errors[\"position\"]}</span>\r\n                    <label htmlFor=\"company\">{t('content.register.company')}</label>\r\n                    <input onChange={this.onChange.bind(this, 'company')} value={this.state.fields['company']} type=\"company\" className=\"\" name=\"company\" />\r\n                    <span className=\"error-msg-span\">{this.state.errors[\"company\"]}</span>\r\n                    <label htmlFor=\"password\">{t('content.register.password')}</label>\r\n                    <input type=\"password\" onChange={this.onChange.bind(this, 'password')} value={this.state.fields['password']} className=\"\" id=\"password\" />\r\n                    <span className=\"error-msg-span\">{this.state.errors[\"password\"]}</span>\r\n                    <label htmlFor=\"confirm\">{t('content.register.confirm')}</label>\r\n                    <input type=\"password\" onChange={this.onChange.bind(this, 'confirm')} value={this.state.fields['confirm']} className=\"\" id=\"confirm\" />\r\n                    <span className=\"error-msg-span\">{this.state.errors[\"confirm\"]}</span>\r\n                    <div class=\"card-form-divider\">\r\n                        <button type=\"submit\" className=\"card-form-button\">{t('content.register.submit')}</button>\r\n                        <button type=\"reset\" onClick={this.resetForm} className=\"card-form-button\" >{t('content.register.reset')}</button>\r\n                        <button type=\"button\" className=\"card-form-button\"><Link to=\"/\" className=\"card-form-button-link\">{t('content.register.cancel')}</Link></button>\r\n                    </div>\r\n                    {this.state.authenticated ? (\r\n                        <span className=\"error-msg-span\" id=\"serverResponse\">Already authenticated</span>\r\n                    ) : (\r\n                        <span className=\"error-msg-span\" id=\"serverResponse\"></span>\r\n                    )}\r\n                </form>\r\n                <p className=\"card-form-reminder\">{t('content.register.loginTip')} <Link to=\"/login\">{t('content.register.loginLink')}</Link></p>\r\n            </div>\r\n        )\r\n    }    \r\n}\r\n\r\nconst RegisterTranslation = withTranslation('common')(Register);\r\n\r\nexport default RegisterTranslation;\r\n\r\n// TODO: FIX FORM VALIDATION MESSAGES DISPLAY !!!","D:\\studia\\PRACA DYPLOMOWA\\hermes\\client\\src\\components\\Nav\\Sidebar.js",[],"D:\\studia\\PRACA DYPLOMOWA\\hermes\\client\\src\\components\\Dashboard\\Dashboard.js",[],"D:\\studia\\PRACA DYPLOMOWA\\hermes\\client\\src\\components\\Nav\\Login.js",[],"D:\\studia\\PRACA DYPLOMOWA\\hermes\\client\\src\\components\\Project\\Project.js",["191","192"],"D:\\studia\\PRACA DYPLOMOWA\\hermes\\client\\src\\services\\i18n.js",[],"D:\\studia\\PRACA DYPLOMOWA\\hermes\\client\\src\\middleware\\jwtSessionStorage.js",[],"D:\\studia\\PRACA DYPLOMOWA\\hermes\\client\\src\\middleware\\languageLocalStorage.js",[],"D:\\studia\\PRACA DYPLOMOWA\\hermes\\client\\src\\components\\Project\\CreateProject.js",["193"],"import React from 'react';\r\nimport {withTranslation} from 'react-i18next';\r\nimport {Redirect} from 'react-router';\r\nimport {Link} from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nimport {getJwtDataFromSessionStorage, removeJwtDataFromSessionStorage} from '../../middleware/jwtSessionStorage';\r\n\r\nimport '../../assets/css/register.css';\r\nimport '../../assets/css/style.css';\r\nimport '../../assets/css/errors.css';\r\n\r\nclass CreateProject extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        var jwt = getJwtDataFromSessionStorage();\r\n\r\n        if(jwt != null) {\r\n            this.state = {\r\n                auth: {\r\n                    userId: jwt.userId,\r\n                    refreshToken: jwt.refreshToken\r\n                },\r\n                fields: {},\r\n                errors: {}\r\n            }\r\n        } else {\r\n            this.state = {\r\n                auth: {\r\n                    userId: null,\r\n                    refreshToken: null\r\n                },\r\n                fields: {},\r\n                errors: {}\r\n            }\r\n        }\r\n\r\n        this.resetForm = this.resetForm.bind(this);\r\n    }\r\n\r\n    resetForm() {\r\n        document.getElementById('serverResponse').innerHTML = '';\r\n        this.setState({fields: {}, errors: {}});\r\n    }\r\n\r\n    onChange(field, event) {\r\n        let fields = this.state.fields;\r\n        let errors = this.state.errors;\r\n        fields[field] = event.target.value;       \r\n        errors[field] = '';\r\n        this.setState({fields, errors});\r\n    }\r\n\r\n    onFormSubmit = (event, errors) => {\r\n        event.preventDefault();\r\n        const {t} = this.props;\r\n        const fields = this.state.fields;\r\n\r\n        const headers = {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${this.state.auth.refreshToken}`\r\n        };\r\n\r\n        axios.post('http://localhost:3300/project/create', {\r\n            name: fields['name'],\r\n            category: fields['category'],\r\n            requirements: fields['requirements'],\r\n            userId: this.state.auth.userId,\r\n            due_date: fields['due_date']\r\n        },\r\n        {\r\n            withCredentials: true,\r\n            headers: headers\r\n        })\r\n        .then((response) => {\r\n            let res = document.getElementById('serverResponse');\r\n            if(response.data.message === 'ProjectCreateSuccess') {\r\n                res.innerHTML = t('content.projects.createProject.actionResults.success');\r\n                res.style.color = 'green';\r\n            } else if(response.data.message === 'ProjectCreateFailure') {\r\n                res.innerHTML = t('content.projects.createProject.actionResults.failure');\r\n            } else {\r\n                res.innerHTML = response.data.message;\r\n            }\r\n            res.style.display = 'block';            \r\n        })\r\n        .catch(error => {\r\n            let sr = document.getElementById('serverResponse');\r\n            if(error) {\r\n                if(error.response.data.message === 'JwtTokenExpired') {\r\n                    removeJwtDataFromSessionStorage();\r\n                } else {\r\n                    sr.innerHTML = error;\r\n                    sr.style.display = 'block';\r\n                }\r\n            }\r\n        }) \r\n    }\r\n\r\n    render() {\r\n        const {t} = this.props;\r\n\r\n        if(this.state.auth.userId !== '' && this.state.auth.userId !== undefined && this.state.auth.userId !== null && this.state.auth.refreshToken !== '' && this.state.auth.refreshToken !== undefined && this.state.auth.refreshToken !== null) {\r\n            return(\r\n                <div className=\"card\">\r\n                    <p className=\"card-title\">Create new project</p><hr className=\"card-hr\" />\r\n                    <form className=\"card-form\" onSubmit={this.onFormSubmit}>\r\n                        <label htmlFor=\"name\">Project name</label>\r\n                        <input onChange={this.onChange.bind(this, 'name')} value={this.state.fields['name']} type=\"name\" className=\"\" name=\"name\" />\r\n                        <span className=\"error-msg-span\">{this.state.errors[\"name\"]}</span>\r\n                        <label htmlFor=\"category\">Category</label>\r\n                        <select onChange={this.onChange.bind(this, 'category')} value={this.state.fields['category']} type=\"category\" className=\"\" name=\"category\">\r\n                            <option value=\"Software Development\" default>Software Development</option>\r\n                            <option value=\"DevOps\">DevOps</option>\r\n                            <option value=\"Databases\">Databases</option>\r\n                            <option value=\"R&D\">R&D</option>\r\n                        </select>\r\n                        <span className=\"error-msg-span\">{this.state.errors[\"category\"]}</span>\r\n                        <label htmlFor=\"requirements\">Requirements</label>\r\n                        <textarea onChange={this.onChange.bind(this, 'requirements')} value={this.state.fields['requirements']} type=\"requirements\" className=\"\" name=\"requirements\" />\r\n                        <span className=\"error-msg-span\">{this.state.errors[\"requirements\"]}</span>\r\n                        <label htmlFor=\"due_date\">Due date</label>\r\n                        <input onChange={this.onChange.bind(this, 'due_date')} value={this.state.fields['due_date']} type=\"date\" className=\"\" name=\"due_date\"\r\n                            min=\"2021-02-01\" max=\"2022-12-31\" />\r\n                        <span className=\"error-msg-span\">{this.state.errors[\"due_date\"]}</span>\r\n                        <div class=\"card-form-divider\">\r\n                            <button type=\"submit\" className=\"card-form-button\">Create</button>\r\n                            <button type=\"reset\" className=\"card-form-button\" onClick={this.resetForm}>Reset</button>\r\n                            <button type=\"button\" className=\"card-form-button\"><Link to=\"/dashboard\" className=\"card-form-button-link\">Cancel</Link></button>\r\n                        </div>\r\n                        <span className=\"error-msg-span\" id=\"serverResponse\"></span>\r\n                    </form>\r\n                </div>\r\n            )\r\n        } else {\r\n            return(\r\n                <Redirect to=\r\n                    {{\r\n                        pathname: '/login',\r\n                        state: {\r\n                            unauthorized: true,\r\n                            redirected: true\r\n                        }\r\n                    }}\r\n                />\r\n            ) \r\n        }\r\n    }\r\n}\r\n\r\nconst CreateProjectTranslation = withTranslation('common')(CreateProject);\r\n\r\nexport default CreateProjectTranslation;","D:\\studia\\PRACA DYPLOMOWA\\hermes\\client\\src\\components\\Dashboard\\RecentActivity.js",[],"D:\\studia\\PRACA DYPLOMOWA\\hermes\\client\\src\\components\\Task\\CreateTask.js",["194"],"import React from 'react';\r\nimport {withTranslation} from 'react-i18next';\r\nimport {Redirect} from 'react-router';\r\nimport {Link} from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nimport {getJwtDataFromSessionStorage, removeJwtDataFromSessionStorage} from '../../middleware/jwtSessionStorage';\r\n\r\nimport '../../assets/css/register.css';\r\nimport '../../assets/css/style.css';\r\nimport '../../assets/css/errors.css';\r\n\r\nclass CreateTask extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        var jwt = getJwtDataFromSessionStorage();\r\n\r\n        if(jwt != null) {\r\n            this.state = {\r\n                auth: {\r\n                    userId: jwt.userId,\r\n                    refreshToken: jwt.refreshToken\r\n                },\r\n                fields: {},\r\n                errors: {}\r\n            }\r\n        } else {\r\n            this.state = {\r\n                auth: {\r\n                    userId: null,\r\n                    refreshToken: null\r\n                },\r\n                fields: {},\r\n                errors: {}\r\n            }\r\n        }\r\n\r\n        this.resetForm = this.resetForm.bind(this);\r\n    }\r\n\r\n    resetForm() {\r\n        document.getElementById('serverResponse').innerHTML = '';\r\n        this.setState({fields: {}, errors: {}});\r\n    }\r\n\r\n    onChange(field, event) {\r\n        let fields = this.state.fields;\r\n        let errors = this.state.errors;\r\n        fields[field] = event.target.value;       \r\n        errors[field] = '';\r\n        this.setState({fields, errors});\r\n    }\r\n\r\n    onFormSubmit = (event, errors) => {\r\n        event.preventDefault();\r\n        const {t} = this.props;\r\n        const fields = this.state.fields;\r\n\r\n        const headers = {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${this.state.auth.refreshToken}`\r\n        };\r\n\r\n        axios.post('http://localhost:3300/project/create', {\r\n            name: fields['name'],\r\n            category: fields['category'],\r\n            requirements: fields['requirements'],\r\n            userId: this.state.auth.userId,\r\n            due_date: fields['due_date']\r\n        },\r\n        {\r\n            withCredentials: true,\r\n            headers: headers\r\n        })\r\n        .then((response) => {\r\n            let res = document.getElementById('serverResponse');\r\n            if(response.data.message === 'ProjectCreateSuccess') {\r\n                res.innerHTML = t('content.projects.createProject.actionResults.success');\r\n                res.style.color = 'green';\r\n            } else if(response.data.message === 'ProjectCreateFailure') {\r\n                res.innerHTML = t('content.projects.createProject.actionResults.failure');\r\n            } else {\r\n                res.innerHTML = response.data.message;\r\n            }\r\n            res.style.display = 'block';            \r\n        })\r\n        .catch(error => {\r\n            let sr = document.getElementById('serverResponse');\r\n            if(error) {\r\n                if(error.response.data.message === 'JwtTokenExpired') {\r\n                    removeJwtDataFromSessionStorage();\r\n                } else {\r\n                    sr.innerHTML = error;\r\n                    sr.style.display = 'block';\r\n                }\r\n            }\r\n        }) \r\n    }\r\n\r\n    render() {\r\n        const {t} = this.props;\r\n\r\n        if(this.state.auth.userId !== '' && this.state.auth.userId !== undefined && this.state.auth.userId !== null && this.state.auth.refreshToken !== '' && this.state.auth.refreshToken !== undefined && this.state.auth.refreshToken !== null) {\r\n            return(\r\n                <div className=\"card\">\r\n                    <p className=\"card-title\">Create new project</p><hr className=\"card-hr\" />\r\n                    <form className=\"card-form\" onSubmit={this.onFormSubmit}>\r\n                        <label htmlFor=\"name\">Project name</label>\r\n                        <input onChange={this.onChange.bind(this, 'name')} value={this.state.fields['name']} type=\"name\" className=\"\" name=\"name\" />\r\n                        <span className=\"error-msg-span\">{this.state.errors[\"name\"]}</span>\r\n                        <label htmlFor=\"category\">Category</label>\r\n                        <select onChange={this.onChange.bind(this, 'category')} value={this.state.fields['category']} type=\"category\" className=\"\" name=\"category\">\r\n                            <option value=\"Software Development\" default>Software Development</option>\r\n                            <option value=\"DevOps\">DevOps</option>\r\n                            <option value=\"Databases\">Databases</option>\r\n                            <option value=\"R&D\">R&D</option>\r\n                        </select>\r\n                        <span className=\"error-msg-span\">{this.state.errors[\"category\"]}</span>\r\n                        <label htmlFor=\"requirements\">Requirements</label>\r\n                        <textarea onChange={this.onChange.bind(this, 'requirements')} value={this.state.fields['requirements']} type=\"requirements\" className=\"\" name=\"requirements\" />\r\n                        <span className=\"error-msg-span\">{this.state.errors[\"requirements\"]}</span>\r\n                        <label htmlFor=\"due_date\">Due date</label>\r\n                        <input onChange={this.onChange.bind(this, 'due_date')} value={this.state.fields['due_date']} type=\"date\" className=\"\" name=\"due_date\"\r\n                            min=\"2021-02-01\" max=\"2022-12-31\" />\r\n                        <span className=\"error-msg-span\">{this.state.errors[\"due_date\"]}</span>\r\n                        <div class=\"card-form-divider\">\r\n                            <button type=\"submit\" className=\"card-form-button\">Create</button>\r\n                            <button type=\"reset\" className=\"card-form-button\" onClick={this.resetForm}>Reset</button>\r\n                            <button type=\"button\" className=\"card-form-button\"><Link to=\"/dashboard\" className=\"card-form-button-link\">Cancel</Link></button>\r\n                        </div>\r\n                        <span className=\"error-msg-span\" id=\"serverResponse\"></span>\r\n                    </form>\r\n                </div>\r\n            )\r\n        } else {\r\n            return(\r\n                <Redirect to=\r\n                    {{\r\n                        pathname: '/login',\r\n                        state: {\r\n                            unauthorized: true,\r\n                            redirected: true\r\n                        }\r\n                    }}\r\n                />\r\n            ) \r\n        }\r\n    }\r\n}\r\n\r\nconst CreateTaskTranslation = withTranslation('common')(CreateTask);\r\n\r\nexport default CreateTaskTranslation;","D:\\studia\\PRACA DYPLOMOWA\\hermes\\client\\src\\components\\Dashboard\\UserActions.js",[],"D:\\studia\\PRACA DYPLOMOWA\\hermes\\client\\src\\components\\Project\\ProjectList.js",["195"],"import React from 'react';\r\nimport {withTranslation} from 'react-i18next';\r\nimport axios from 'axios';\r\n\r\nimport {getJwtDataFromSessionStorage} from '../../middleware/jwtSessionStorage';\r\n\r\nimport CreateProject from './CreateProject';\r\n\r\nimport Login from '../Nav/Login';\r\n\r\nimport '../../assets/css/dashboard.css';\r\n\r\nclass ProjectList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        var jwt = getJwtDataFromSessionStorage();\r\n\r\n        if(jwt != null) {\r\n            this.state = {\r\n                auth: {\r\n                    userId: jwt.userId,\r\n                    refreshToken: jwt.refreshToken\r\n                },\r\n                projects: []\r\n            }\r\n        } else {\r\n            this.state = {\r\n                auth: {\r\n                    userId: null,\r\n                    refreshToken: null\r\n                },\r\n                projects: []\r\n            }\r\n        }\r\n\r\n        this.getProjectList = this.getProjectList.bind(this);\r\n\r\n        this.getProjectList();\r\n    }\r\n\r\n    getProjectList() {\r\n        const headers = {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${this.state.auth.refreshToken}`\r\n        };\r\n\r\n        axios.post('http://localhost:3300/project/list', \r\n        {\r\n            userId: this.state.auth.userId    \r\n        },\r\n        {\r\n            withCredentials: true,\r\n            headers: headers\r\n        })\r\n        .then((response) => {\r\n            if(response.data.projects !== undefined && response.data.projects !== '' && response.data.projects !== null && response.data.projects.length > 0) {\r\n                this.setState({projects: response.data.projects});\r\n            }\r\n        })\r\n        .catch((error) => {\r\n            console.log(error);\r\n            console.log(error.response);\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const{t} = this.props;\r\n\r\n        if(this.state.auth.userId !== '' && this.state.auth.userId !== undefined && this.state.auth.userId !== null && this.state.auth.refreshToken !== '' && this.state.auth.refreshToken !== null) {\r\n            \r\n            return(\r\n                <table class=\"tab-table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>{t('content.projects.tableHeaders.name')}</th>\r\n                            <th>{t('content.projects.tableHeaders.assignedTeam')}</th>\r\n                            <th>{t('content.projects.tableHeaders.category')}</th>\r\n                            <th>{t('content.projects.tableHeaders.dueDate')}</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {this.state.projects.map((project, index) => (\r\n                            <tr>\r\n                                <td>{project.name}</td>\r\n                                <td>{project.assignedTeam}</td>\r\n                                <td>{project.category}</td>\r\n                                <td>{project.dueDate}</td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </table>\r\n            )\r\n        } else {\r\n            return <Login />\r\n        }\r\n    }    \r\n}\r\n\r\nconst ProjectListTranslation = withTranslation('common')(ProjectList);\r\n\r\nexport default ProjectListTranslation;","D:\\studia\\PRACA DYPLOMOWA\\hermes\\client\\src\\components\\Team\\TeamList.js",[],"D:\\studia\\PRACA DYPLOMOWA\\hermes\\client\\src\\components\\Task\\TaskList.js",[],"D:\\studia\\PRACA DYPLOMOWA\\hermes\\client\\src\\components\\Company\\CreateCompany.js",[],"D:\\studia\\PRACA DYPLOMOWA\\hermes\\client\\src\\components\\Team\\CreateTeam.js",["196"],"import React from 'react';\r\nimport {withTranslation} from 'react-i18next';\r\nimport {Redirect} from 'react-router';\r\nimport {Link} from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nimport {getJwtDataFromSessionStorage, removeJwtDataFromSessionStorage} from '../../middleware/jwtSessionStorage';\r\n\r\nimport '../../assets/css/register.css';\r\nimport '../../assets/css/style.css';\r\nimport '../../assets/css/errors.css';\r\n\r\nclass CreateTeam extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        var jwt = getJwtDataFromSessionStorage();\r\n\r\n        if(jwt != null) {\r\n            this.state = {\r\n                auth: {\r\n                    userId: jwt.userId,\r\n                    refreshToken: jwt.refreshToken\r\n                },\r\n                fields: {},\r\n                errors: {}\r\n            }\r\n        } else {\r\n            this.state = {\r\n                auth: {\r\n                    userId: null,\r\n                    refreshToken: null\r\n                },\r\n                fields: {},\r\n                errors: {}\r\n            }\r\n        }\r\n\r\n        this.resetForm = this.resetForm.bind(this);\r\n    }\r\n\r\n    resetForm() {\r\n        document.getElementById('serverResponse').innerHTML = '';\r\n        this.setState({fields: {}, errors: {}});\r\n    }\r\n\r\n    onChange(field, event) {\r\n        let fields = this.state.fields;\r\n        let errors = this.state.errors;\r\n        fields[field] = event.target.value;       \r\n        errors[field] = '';\r\n        this.setState({fields, errors});\r\n    }\r\n\r\n    onFormSubmit = (event, errors) => {\r\n        event.preventDefault();\r\n        const {t} = this.props;\r\n        const fields = this.state.fields;\r\n\r\n        const headers = {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${this.state.auth.refreshToken}`\r\n        };\r\n\r\n        axios.post('http://localhost:3300/project/create', {\r\n            name: fields['name'],\r\n            category: fields['category'],\r\n            requirements: fields['requirements'],\r\n            userId: this.state.auth.userId,\r\n            due_date: fields['due_date']\r\n        },\r\n        {\r\n            withCredentials: true,\r\n            headers: headers\r\n        })\r\n        .then((response) => {\r\n            let res = document.getElementById('serverResponse');\r\n            if(response.data.message === 'ProjectCreateSuccess') {\r\n                res.innerHTML = t('content.projects.createProject.actionResults.success');\r\n                res.style.color = 'green';\r\n            } else if(response.data.message === 'ProjectCreateFailure') {\r\n                res.innerHTML = t('content.projects.createProject.actionResults.failure');\r\n            } else {\r\n                res.innerHTML = response.data.message;\r\n            }\r\n            res.style.display = 'block';            \r\n        })\r\n        .catch(error => {\r\n            let sr = document.getElementById('serverResponse');\r\n            if(error) {\r\n                if(error.response.data.message === 'JwtTokenExpired') {\r\n                    removeJwtDataFromSessionStorage();\r\n                } else {\r\n                    sr.innerHTML = error;\r\n                    sr.style.display = 'block';\r\n                }\r\n            }\r\n        }) \r\n    }\r\n\r\n    render() {\r\n        const {t} = this.props;\r\n\r\n        if(this.state.auth.userId !== '' && this.state.auth.userId !== undefined && this.state.auth.userId !== null && this.state.auth.refreshToken !== '' && this.state.auth.refreshToken !== undefined && this.state.auth.refreshToken !== null) {\r\n            return(\r\n                <div className=\"card\">\r\n                    <p className=\"card-title\">Create new project</p><hr className=\"card-hr\" />\r\n                    <form className=\"card-form\" onSubmit={this.onFormSubmit}>\r\n                        <label htmlFor=\"name\">Project name</label>\r\n                        <input onChange={this.onChange.bind(this, 'name')} value={this.state.fields['name']} type=\"name\" className=\"\" name=\"name\" />\r\n                        <span className=\"error-msg-span\">{this.state.errors[\"name\"]}</span>\r\n                        <label htmlFor=\"category\">Category</label>\r\n                        <select onChange={this.onChange.bind(this, 'category')} value={this.state.fields['category']} type=\"category\" className=\"\" name=\"category\">\r\n                            <option value=\"Software Development\" default>Software Development</option>\r\n                            <option value=\"DevOps\">DevOps</option>\r\n                            <option value=\"Databases\">Databases</option>\r\n                            <option value=\"R&D\">R&D</option>\r\n                        </select>\r\n                        <span className=\"error-msg-span\">{this.state.errors[\"category\"]}</span>\r\n                        <label htmlFor=\"requirements\">Requirements</label>\r\n                        <textarea onChange={this.onChange.bind(this, 'requirements')} value={this.state.fields['requirements']} type=\"requirements\" className=\"\" name=\"requirements\" />\r\n                        <span className=\"error-msg-span\">{this.state.errors[\"requirements\"]}</span>\r\n                        <label htmlFor=\"due_date\">Due date</label>\r\n                        <input onChange={this.onChange.bind(this, 'due_date')} value={this.state.fields['due_date']} type=\"date\" className=\"\" name=\"due_date\"\r\n                            min=\"2021-02-01\" max=\"2022-12-31\" />\r\n                        <span className=\"error-msg-span\">{this.state.errors[\"due_date\"]}</span>\r\n                        <div class=\"card-form-divider\">\r\n                            <button type=\"submit\" className=\"card-form-button\">Create</button>\r\n                            <button type=\"reset\" className=\"card-form-button\" onClick={this.resetForm}>Reset</button>\r\n                            <button type=\"button\" className=\"card-form-button\"><Link to=\"/dashboard\" className=\"card-form-button-link\">Cancel</Link></button>\r\n                        </div>\r\n                        <span className=\"error-msg-span\" id=\"serverResponse\"></span>\r\n                    </form>\r\n                </div>\r\n            )\r\n        } else {\r\n            return(\r\n                <Redirect to=\r\n                    {{\r\n                        pathname: '/login',\r\n                        state: {\r\n                            unauthorized: true,\r\n                            redirected: true\r\n                        }\r\n                    }}\r\n                />\r\n            ) \r\n        }\r\n    }\r\n}\r\n\r\nconst CreateTeamTranslation = withTranslation('common')(CreateTeam);\r\n\r\nexport default CreateTeamTranslation;","D:\\studia\\PRACA DYPLOMOWA\\hermes\\client\\src\\components\\Repository\\CreateRepository.js",["197"],"import React from 'react';\r\nimport {withTranslation} from 'react-i18next';\r\nimport {Redirect} from 'react-router';\r\nimport {Link} from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nimport {getJwtDataFromSessionStorage, removeJwtDataFromSessionStorage} from '../../middleware/jwtSessionStorage';\r\n\r\nimport '../../assets/css/register.css';\r\nimport '../../assets/css/style.css';\r\nimport '../../assets/css/errors.css';\r\n\r\nclass CreateRepository extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        var jwt = getJwtDataFromSessionStorage();\r\n\r\n        if(jwt != null) {\r\n            this.state = {\r\n                auth: {\r\n                    userId: jwt.userId,\r\n                    refreshToken: jwt.refreshToken\r\n                },\r\n                fields: {},\r\n                errors: {}\r\n            }\r\n        } else {\r\n            this.state = {\r\n                auth: {\r\n                    userId: null,\r\n                    refreshToken: null\r\n                },\r\n                fields: {},\r\n                errors: {}\r\n            }\r\n        }\r\n\r\n        this.resetForm = this.resetForm.bind(this);\r\n    }\r\n\r\n    resetForm() {\r\n        document.getElementById('serverResponse').innerHTML = '';\r\n        this.setState({fields: {}, errors: {}});\r\n    }\r\n\r\n    onChange(field, event) {\r\n        let fields = this.state.fields;\r\n        let errors = this.state.errors;\r\n        fields[field] = event.target.value;       \r\n        errors[field] = '';\r\n        this.setState({fields, errors});\r\n    }\r\n\r\n    onFormSubmit = (event, errors) => {\r\n        event.preventDefault();\r\n        const {t} = this.props;\r\n        const fields = this.state.fields;\r\n\r\n        const headers = {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${this.state.auth.refreshToken}`\r\n        };\r\n\r\n        axios.post('http://localhost:3300/repository/create', {\r\n            name: fields['name'],\r\n            category: fields['category'],\r\n            requirements: fields['requirements'],\r\n            userId: this.state.auth.userId,\r\n            due_date: fields['due_date']\r\n        },\r\n        {\r\n            withCredentials: true,\r\n            headers: headers\r\n        })\r\n        .then((response) => {\r\n            let res = document.getElementById('serverResponse');\r\n            if(response.data.message === 'RepositoryCreateSuccess') {\r\n                res.innerHTML = t('content.repositories.createRepository.actionResults.success');\r\n                res.style.color = 'green';\r\n            } else if(response.data.message === 'RepositoryCreateFailure') {\r\n                res.innerHTML = t('content.repositories.createRepository.actionResults.failure');\r\n            } else {\r\n                res.innerHTML = response.data.message;\r\n            }\r\n            res.style.display = 'block';            \r\n        })\r\n        .catch(error => {\r\n            let sr = document.getElementById('serverResponse');\r\n            if(error) {\r\n                if(error.response.data.message === 'JwtTokenExpired') {\r\n                    removeJwtDataFromSessionStorage();\r\n                } else {\r\n                    sr.innerHTML = error;\r\n                    sr.style.display = 'block';\r\n                }\r\n            }\r\n        }) \r\n    }\r\n\r\n    render() {\r\n        const {t} = this.props;\r\n\r\n        if(this.state.auth.userId !== '' && this.state.auth.userId !== undefined && this.state.auth.userId !== null && this.state.auth.refreshToken !== '' && this.state.auth.refreshToken !== undefined && this.state.auth.refreshToken !== null) {\r\n            return(\r\n                <div className=\"card\">\r\n                    <p className=\"card-title\">Create new Repository</p><hr className=\"card-hr\" />\r\n                    <form className=\"card-form\" onSubmit={this.onFormSubmit}>\r\n                        <label htmlFor=\"name\">Repository name</label>\r\n                        <input onChange={this.onChange.bind(this, 'name')} value={this.state.fields['name']} type=\"name\" className=\"\" name=\"name\" />\r\n                        <span className=\"error-msg-span\">{this.state.errors[\"name\"]}</span>\r\n                        <label htmlFor=\"category\">Category</label>\r\n                        <select onChange={this.onChange.bind(this, 'category')} value={this.state.fields['category']} type=\"category\" className=\"\" name=\"category\">\r\n                            <option value=\"Software Development\" default>Software Development</option>\r\n                            <option value=\"DevOps\">DevOps</option>\r\n                            <option value=\"Databases\">Databases</option>\r\n                            <option value=\"R&D\">R&D</option>\r\n                        </select>\r\n                        <span className=\"error-msg-span\">{this.state.errors[\"category\"]}</span>\r\n                        <label htmlFor=\"requirements\">Requirements</label>\r\n                        <textarea onChange={this.onChange.bind(this, 'requirements')} value={this.state.fields['requirements']} type=\"requirements\" className=\"\" name=\"requirements\" />\r\n                        <span className=\"error-msg-span\">{this.state.errors[\"requirements\"]}</span>\r\n                        <label htmlFor=\"due_date\">Due date</label>\r\n                        <input onChange={this.onChange.bind(this, 'due_date')} value={this.state.fields['due_date']} type=\"date\" className=\"\" name=\"due_date\"\r\n                            min=\"2021-02-01\" max=\"2022-12-31\" />\r\n                        <span className=\"error-msg-span\">{this.state.errors[\"due_date\"]}</span>\r\n                        <div class=\"card-form-divider\">\r\n                            <button type=\"submit\" className=\"card-form-button\">Create</button>\r\n                            <button type=\"reset\" className=\"card-form-button\" onClick={this.resetForm}>Reset</button>\r\n                            <button type=\"button\" className=\"card-form-button\"><Link to=\"/dashboard\" className=\"card-form-button-link\">Cancel</Link></button>\r\n                        </div>\r\n                        <span className=\"error-msg-span\" id=\"serverResponse\"></span>\r\n                    </form>\r\n                </div>\r\n            )\r\n        } else {\r\n            return(\r\n                <Redirect to=\r\n                    {{\r\n                        pathname: '/login',\r\n                        state: {\r\n                            unauthorized: true,\r\n                            redirected: true\r\n                        }\r\n                    }}\r\n                />\r\n            ) \r\n        }\r\n    }\r\n}\r\n\r\nconst CreateRepositoryTranslation = withTranslation('common')(CreateRepository);\r\n\r\nexport default CreateRepositoryTranslation;","D:\\studia\\PRACA DYPLOMOWA\\hermes\\client\\src\\components\\Role\\CreateRole.js",["198"],"import React from 'react';\r\nimport {withTranslation} from 'react-i18next';\r\nimport {Redirect} from 'react-router';\r\nimport {Link} from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nimport {getJwtDataFromSessionStorage, removeJwtDataFromSessionStorage} from '../../middleware/jwtSessionStorage';\r\n\r\nimport '../../assets/css/register.css';\r\nimport '../../assets/css/style.css';\r\nimport '../../assets/css/errors.css';\r\n\r\nclass CreateRole extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        var jwt = getJwtDataFromSessionStorage();\r\n\r\n        if(jwt != null) {\r\n            this.state = {\r\n                auth: {\r\n                    userId: jwt.userId,\r\n                    refreshToken: jwt.refreshToken\r\n                },\r\n                fields: {},\r\n                errors: {}\r\n            }\r\n        } else {\r\n            this.state = {\r\n                auth: {\r\n                    userId: null,\r\n                    refreshToken: null\r\n                },\r\n                fields: {},\r\n                errors: {}\r\n            }\r\n        }\r\n\r\n        this.resetForm = this.resetForm.bind(this);\r\n    }\r\n\r\n    resetForm() {\r\n        document.getElementById('serverResponse').innerHTML = '';\r\n        this.setState({fields: {}, errors: {}});\r\n    }\r\n\r\n    onChange(field, event) {\r\n        let fields = this.state.fields;\r\n        let errors = this.state.errors;\r\n        fields[field] = event.target.value;       \r\n        errors[field] = '';\r\n        this.setState({fields, errors});\r\n    }\r\n\r\n    onFormSubmit = (event, errors) => {\r\n        event.preventDefault();\r\n        const {t} = this.props;\r\n        const fields = this.state.fields;\r\n\r\n        const headers = {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${this.state.auth.refreshToken}`\r\n        };\r\n\r\n        axios.post('http://localhost:3300/project/create', {\r\n            name: fields['name'],\r\n            category: fields['category'],\r\n            requirements: fields['requirements'],\r\n            userId: this.state.auth.userId,\r\n            due_date: fields['due_date']\r\n        },\r\n        {\r\n            withCredentials: true,\r\n            headers: headers\r\n        })\r\n        .then((response) => {\r\n            let res = document.getElementById('serverResponse');\r\n            if(response.data.message === 'ProjectCreateSuccess') {\r\n                res.innerHTML = t('content.projects.createProject.actionResults.success');\r\n                res.style.color = 'green';\r\n            } else if(response.data.message === 'ProjectCreateFailure') {\r\n                res.innerHTML = t('content.projects.createProject.actionResults.failure');\r\n            } else {\r\n                res.innerHTML = response.data.message;\r\n            }\r\n            res.style.display = 'block';            \r\n        })\r\n        .catch(error => {\r\n            let sr = document.getElementById('serverResponse');\r\n            if(error) {\r\n                if(error.response.data.message === 'JwtTokenExpired') {\r\n                    removeJwtDataFromSessionStorage();\r\n                } else {\r\n                    sr.innerHTML = error;\r\n                    sr.style.display = 'block';\r\n                }\r\n            }\r\n        }) \r\n    }\r\n\r\n    render() {\r\n        const {t} = this.props;\r\n\r\n        if(this.state.auth.userId !== '' && this.state.auth.userId !== undefined && this.state.auth.userId !== null && this.state.auth.refreshToken !== '' && this.state.auth.refreshToken !== undefined && this.state.auth.refreshToken !== null) {\r\n            return(\r\n                <div className=\"card\">\r\n                    <p className=\"card-title\">Create new project</p><hr className=\"card-hr\" />\r\n                    <form className=\"card-form\" onSubmit={this.onFormSubmit}>\r\n                        <label htmlFor=\"name\">Project name</label>\r\n                        <input onChange={this.onChange.bind(this, 'name')} value={this.state.fields['name']} type=\"name\" className=\"\" name=\"name\" />\r\n                        <span className=\"error-msg-span\">{this.state.errors[\"name\"]}</span>\r\n                        <label htmlFor=\"category\">Category</label>\r\n                        <select onChange={this.onChange.bind(this, 'category')} value={this.state.fields['category']} type=\"category\" className=\"\" name=\"category\">\r\n                            <option value=\"Software Development\" default>Software Development</option>\r\n                            <option value=\"DevOps\">DevOps</option>\r\n                            <option value=\"Databases\">Databases</option>\r\n                            <option value=\"R&D\">R&D</option>\r\n                        </select>\r\n                        <span className=\"error-msg-span\">{this.state.errors[\"category\"]}</span>\r\n                        <label htmlFor=\"requirements\">Requirements</label>\r\n                        <textarea onChange={this.onChange.bind(this, 'requirements')} value={this.state.fields['requirements']} type=\"requirements\" className=\"\" name=\"requirements\" />\r\n                        <span className=\"error-msg-span\">{this.state.errors[\"requirements\"]}</span>\r\n                        <label htmlFor=\"due_date\">Due date</label>\r\n                        <input onChange={this.onChange.bind(this, 'due_date')} value={this.state.fields['due_date']} type=\"date\" className=\"\" name=\"due_date\"\r\n                            min=\"2021-02-01\" max=\"2022-12-31\" />\r\n                        <span className=\"error-msg-span\">{this.state.errors[\"due_date\"]}</span>\r\n                        <div class=\"card-form-divider\">\r\n                            <button type=\"submit\" className=\"card-form-button\">Create</button>\r\n                            <button type=\"reset\" className=\"card-form-button\" onClick={this.resetForm}>Reset</button>\r\n                            <button type=\"button\" className=\"card-form-button\"><Link to=\"/dashboard\" className=\"card-form-button-link\">Cancel</Link></button>\r\n                        </div>\r\n                        <span className=\"error-msg-span\" id=\"serverResponse\"></span>\r\n                    </form>\r\n                </div>\r\n            )\r\n        } else {\r\n            return(\r\n                <Redirect to=\r\n                    {{\r\n                        pathname: '/login',\r\n                        state: {\r\n                            unauthorized: true,\r\n                            redirected: true\r\n                        }\r\n                    }}\r\n                />\r\n            ) \r\n        }\r\n    }\r\n}\r\n\r\nconst CreateRoleTranslation = withTranslation('common')(CreateRole);\r\n\r\nexport default CreateRoleTranslation;","D:\\studia\\PRACA DYPLOMOWA\\hermes\\client\\src\\components\\Repository\\RepositoryList.js",[],"D:\\studia\\PRACA DYPLOMOWA\\hermes\\client\\src\\components\\User\\UserList.js",[],"D:\\studia\\PRACA DYPLOMOWA\\hermes\\client\\src\\components\\Comment\\CreateComment.js",[],"D:\\studia\\PRACA DYPLOMOWA\\hermes\\client\\src\\components\\Comment\\CommentList.js",[],"D:\\studia\\PRACA DYPLOMOWA\\hermes\\client\\src\\components\\Company\\CompanyList.js",[],"D:\\studia\\PRACA DYPLOMOWA\\hermes\\client\\src\\components\\Role\\RoleList.js",[],"D:\\studia\\PRACA DYPLOMOWA\\hermes\\client\\src\\components\\NotFound.js",[],"D:\\studia\\PRACA DYPLOMOWA\\hermes\\client\\src\\components\\Project\\EditProject.js",[],"D:\\studia\\PRACA DYPLOMOWA\\hermes\\client\\src\\components\\Company\\EditCompany.js",[],"D:\\studia\\PRACA DYPLOMOWA\\hermes\\client\\src\\components\\Comment\\EditComment.js",[],"D:\\studia\\PRACA DYPLOMOWA\\hermes\\client\\src\\components\\Task\\EditTask.js",[],"D:\\studia\\PRACA DYPLOMOWA\\hermes\\client\\src\\components\\Team\\EditTeam.js",[],"D:\\studia\\PRACA DYPLOMOWA\\hermes\\client\\src\\components\\Role\\EditRole.js",[],"D:\\studia\\PRACA DYPLOMOWA\\hermes\\client\\src\\components\\Repository\\EditRepository.js",[],"D:\\studia\\PRACA DYPLOMOWA\\hermes\\client\\src\\components\\Comment\\Comment.js",["199"],"D:\\studia\\PRACA DYPLOMOWA\\hermes\\client\\src\\components\\Company\\Company.js",["200"],"D:\\studia\\PRACA DYPLOMOWA\\hermes\\client\\src\\components\\Team\\Team.js",["201","202"],"D:\\studia\\PRACA DYPLOMOWA\\hermes\\client\\src\\components\\Repository\\Repository.js",["203","204"],"D:\\studia\\PRACA DYPLOMOWA\\hermes\\client\\src\\components\\Role\\Role.js",["205","206"],{"ruleId":"207","replacedBy":"208"},{"ruleId":"209","replacedBy":"210"},{"ruleId":"211","severity":1,"message":"212","line":17,"column":8,"nodeType":"213","messageId":"214","endLine":17,"endColumn":12},{"ruleId":"211","severity":1,"message":"215","line":28,"column":8,"nodeType":"213","messageId":"214","endLine":28,"endColumn":16},{"ruleId":"211","severity":1,"message":"216","line":30,"column":8,"nodeType":"213","messageId":"214","endLine":30,"endColumn":16},{"ruleId":"211","severity":1,"message":"217","line":34,"column":8,"nodeType":"213","messageId":"214","endLine":34,"endColumn":18},{"ruleId":"211","severity":1,"message":"218","line":42,"column":8,"nodeType":"213","messageId":"214","endLine":42,"endColumn":16},{"ruleId":"219","severity":1,"message":"220","line":91,"column":147,"nodeType":"221","messageId":"222","endLine":91,"endColumn":148,"suggestions":"223"},{"ruleId":"219","severity":1,"message":"220","line":91,"column":172,"nodeType":"221","messageId":"222","endLine":91,"endColumn":173,"suggestions":"224"},{"ruleId":"211","severity":1,"message":"225","line":3,"column":8,"nodeType":"213","messageId":"214","endLine":3,"endColumn":13},{"ruleId":"211","severity":1,"message":"226","line":5,"column":39,"nodeType":"213","messageId":"214","endLine":5,"endColumn":70},{"ruleId":"211","severity":1,"message":"227","line":102,"column":16,"nodeType":"213","messageId":"214","endLine":102,"endColumn":17},{"ruleId":"211","severity":1,"message":"227","line":102,"column":16,"nodeType":"213","messageId":"214","endLine":102,"endColumn":17},{"ruleId":"211","severity":1,"message":"228","line":7,"column":8,"nodeType":"213","messageId":"214","endLine":7,"endColumn":21},{"ruleId":"211","severity":1,"message":"227","line":102,"column":16,"nodeType":"213","messageId":"214","endLine":102,"endColumn":17},{"ruleId":"211","severity":1,"message":"227","line":102,"column":16,"nodeType":"213","messageId":"214","endLine":102,"endColumn":17},{"ruleId":"211","severity":1,"message":"227","line":102,"column":16,"nodeType":"213","messageId":"214","endLine":102,"endColumn":17},{"ruleId":"211","severity":1,"message":"225","line":3,"column":8,"nodeType":"213","messageId":"214","endLine":3,"endColumn":13},{"ruleId":"211","severity":1,"message":"225","line":3,"column":8,"nodeType":"213","messageId":"214","endLine":3,"endColumn":13},{"ruleId":"211","severity":1,"message":"225","line":3,"column":8,"nodeType":"213","messageId":"214","endLine":3,"endColumn":13},{"ruleId":"211","severity":1,"message":"226","line":5,"column":39,"nodeType":"213","messageId":"214","endLine":5,"endColumn":70},{"ruleId":"211","severity":1,"message":"225","line":3,"column":8,"nodeType":"213","messageId":"214","endLine":3,"endColumn":13},{"ruleId":"211","severity":1,"message":"226","line":5,"column":39,"nodeType":"213","messageId":"214","endLine":5,"endColumn":70},{"ruleId":"211","severity":1,"message":"225","line":3,"column":8,"nodeType":"213","messageId":"214","endLine":3,"endColumn":13},{"ruleId":"211","severity":1,"message":"226","line":5,"column":39,"nodeType":"213","messageId":"214","endLine":5,"endColumn":70},"no-native-reassign",["229"],"no-negated-in-lhs",["230"],"no-unused-vars","'Task' is defined but never used.","Identifier","unusedVar","'UserList' is defined but never used.","'TaskList' is defined but never used.","'CreateTask' is defined but never used.","'EditTask' is defined but never used.","no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["231","232"],["233","234"],"'axios' is defined but never used.","'removeJwtDataFromSessionStorage' is defined but never used.","'t' is assigned a value but never used.","'CreateProject' is defined but never used.","no-global-assign","no-unsafe-negation",{"messageId":"235","fix":"236","desc":"237"},{"messageId":"238","fix":"239","desc":"240"},{"messageId":"235","fix":"241","desc":"237"},{"messageId":"238","fix":"242","desc":"240"},"removeEscape",{"range":"243","text":"244"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"245","text":"246"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"247","text":"244"},{"range":"248","text":"246"},[3788,3789],"",[3788,3788],"\\",[3813,3814],[3813,3813]]