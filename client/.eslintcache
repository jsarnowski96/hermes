[{"D:\\studia\\PRACA DYPLOMOWA\\hermes\\client\\src\\index.js":"1","D:\\studia\\PRACA DYPLOMOWA\\hermes\\client\\src\\components\\App.js":"2","D:\\studia\\PRACA DYPLOMOWA\\hermes\\client\\src\\components\\Nav\\Contact.js":"3","D:\\studia\\PRACA DYPLOMOWA\\hermes\\client\\src\\components\\Nav\\About.js":"4","D:\\studia\\PRACA DYPLOMOWA\\hermes\\client\\src\\components\\Nav\\Home.js":"5","D:\\studia\\PRACA DYPLOMOWA\\hermes\\client\\src\\components\\Nav\\Register.js":"6","D:\\studia\\PRACA DYPLOMOWA\\hermes\\client\\src\\components\\Nav\\Sidebar.js":"7","D:\\studia\\PRACA DYPLOMOWA\\hermes\\client\\src\\components\\Dashboard\\Dashboard.js":"8","D:\\studia\\PRACA DYPLOMOWA\\hermes\\client\\src\\components\\Nav\\Login.js":"9","D:\\studia\\PRACA DYPLOMOWA\\hermes\\client\\src\\components\\Dashboard\\ProjectList.js":"10","D:\\studia\\PRACA DYPLOMOWA\\hermes\\client\\src\\components\\Dashboard\\TaskList.js":"11","D:\\studia\\PRACA DYPLOMOWA\\hermes\\client\\src\\components\\Dashboard\\UserList.js":"12","D:\\studia\\PRACA DYPLOMOWA\\hermes\\client\\src\\components\\Dashboard\\ActivityList.js":"13","D:\\studia\\PRACA DYPLOMOWA\\hermes\\client\\src\\components\\Dashboard\\Recent.js":"14","D:\\studia\\PRACA DYPLOMOWA\\hermes\\client\\src\\components\\Project\\Project.js":"15","D:\\studia\\PRACA DYPLOMOWA\\hermes\\client\\src\\services\\i18n.js":"16"},{"size":514,"mtime":1608923331938,"results":"17","hashOfConfig":"18"},{"size":1036,"mtime":1608922786965,"results":"19","hashOfConfig":"18"},{"size":436,"mtime":1608485463391,"results":"20","hashOfConfig":"18"},{"size":426,"mtime":1608485462933,"results":"21","hashOfConfig":"18"},{"size":24540,"mtime":1608485463874,"results":"22","hashOfConfig":"18"},{"size":12176,"mtime":1608943207240,"results":"23","hashOfConfig":"18"},{"size":2395,"mtime":1608922283362,"results":"24","hashOfConfig":"18"},{"size":2145,"mtime":1608928959367,"results":"25","hashOfConfig":"18"},{"size":5009,"mtime":1609598210116,"results":"26","hashOfConfig":"18"},{"size":1049,"mtime":1608922309042,"results":"27","hashOfConfig":"18"},{"size":2059,"mtime":1608922309031,"results":"28","hashOfConfig":"18"},{"size":2055,"mtime":1608922309014,"results":"29","hashOfConfig":"18"},{"size":2079,"mtime":1608922309031,"results":"30","hashOfConfig":"18"},{"size":2063,"mtime":1608922309031,"results":"31","hashOfConfig":"18"},{"size":294,"mtime":1608485264642,"results":"32","hashOfConfig":"18"},{"size":433,"mtime":1608485018169,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1ldetr1",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"36"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"36"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"36"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"D:\\studia\\PRACA DYPLOMOWA\\hermes\\client\\src\\index.js",[],["75","76"],"D:\\studia\\PRACA DYPLOMOWA\\hermes\\client\\src\\components\\App.js",[],"D:\\studia\\PRACA DYPLOMOWA\\hermes\\client\\src\\components\\Nav\\Contact.js",[],"D:\\studia\\PRACA DYPLOMOWA\\hermes\\client\\src\\components\\Nav\\About.js",[],"D:\\studia\\PRACA DYPLOMOWA\\hermes\\client\\src\\components\\Nav\\Home.js",[],"D:\\studia\\PRACA DYPLOMOWA\\hermes\\client\\src\\components\\Nav\\Register.js",["77"],"import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {withTranslation} from 'react-i18next';\r\nimport axios from 'axios';\r\n\r\nimport Login from '../Nav/Login';\r\n\r\nimport '../../assets/css/register.css';\r\nimport '../../assets/css/style.css';\r\nimport '../../assets/css/errors.css';\r\n\r\nclass Register extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            fields: {},\r\n            errors: {}\r\n        };\r\n\r\n        this.resetForm = this.resetForm.bind(this);\r\n    }\r\n\r\n    resetForm() {\r\n        let fields = this.state.fields;\r\n        let errors = this.state.errors;\r\n\r\n        fields['firstname'] = '';\r\n        fields['lastname'] = '';\r\n        fields['username'] = '';\r\n        fields['email'] = '';\r\n        fields['phone'] = '';\r\n        fields['position'] = '';\r\n        fields['company'] = '';\r\n        fields['password'] = '';\r\n        fields['confirm'] = '';\r\n\r\n        errors['firstname'] = '';\r\n        errors['lastname'] = '';\r\n        errors['username'] = '';\r\n        errors['email'] = '';\r\n        errors['phone'] = '';\r\n        errors['position'] = '';\r\n        errors['company'] = '';\r\n        errors['password'] = '';\r\n        errors['confirm'] = '';\r\n\r\n        document.getElementById('serverErrorMsg').innerHTML = '';\r\n\r\n        this.setState({fields, errors});\r\n    }\r\n\r\n    onChange(field, event) {\r\n        let fields = this.state.fields;\r\n        let errors = this.state.errors;\r\n        fields[field] = event.target.value;       \r\n        errors[field] = '';\r\n        this.setState({fields});\r\n    }\r\n\r\n    validateForm() {\r\n        let fields = this.state.fields;\r\n        let errors = this.state.errors;\r\n        let isValid = true;\r\n        const {t} = this.props;\r\n\r\n        if(!fields['firstname']) {\r\n            isValid = false;\r\n            errors['firstname'] = t('misc.phrases.field') + ' \\'' + t('register.firstname') + '\\'' + t('register.errors.requiredFieldIsEmpty');\r\n        } else if(typeof fields['firstname'] !== 'undefined') {\r\n            if(!fields['firstname'].match(/^[a-zA-Z_ ]+$/)) {\r\n                isValid = false;\r\n                errors['firstname'] = t('register.errors.allowedCharsOnly');\r\n            }\r\n        }\r\n\r\n        if(!fields['lastname']) {\r\n            isValid = false;\r\n            errors['lastname'] = t('misc.phrases.field') + ' \\'' + t('register.lastname') + '\\'' + t('register.errors.requiredFieldIsEmpty');\r\n        } else if(typeof fields['lastname'] !== 'undefined') {\r\n            if(!fields['lastname'].match(/^[a-zA-Z_ ]+$/)) {\r\n                isValid = false;\r\n                errors['lastname'] = t('register.errors.allowedCharsOnly');\r\n            }\r\n        }\r\n\r\n        if(!fields['username']) {\r\n            isValid = false;\r\n            errors['username'] = t('misc.phrases.field') + ' \\'' + t('register.username') + '\\'' + t('register.errors.requiredFieldIsEmpty');\r\n        } else if(typeof fields['username'] !== 'undefined') {\r\n            if(!fields['username'].match(/^[a-zA-Z0-9\\-_.]+$/)) {\r\n                isValid = false;\r\n                errors['username'] = t('register.errors.allowedCharsOnly');\r\n            }\r\n        }\r\n\r\n        if(!fields['email']) {\r\n            isValid = false;\r\n            errors['email'] = t('misc.phrases.field') + ' \\'' + t('register.email') + '\\'' + t('register.errors.requiredFieldIsEmpty');\r\n        } else if(typeof fields['email'] != 'undefined') {\r\n            if(!fields['email'].match(/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/)) {\r\n                ///^(([^<>()[\\]\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i\r\n                isValid = false;\r\n                errors['email'] = t('register.errors.emailNotValid');\r\n            }\r\n        }\r\n\r\n        if(!fields['phone']) {\r\n            isValid = false;\r\n            errors['phone'] = t('misc.phrases.field') + ' \\'' + t('register.phone') + '\\'' + t('register.errors.requiredFieldIsEmpty');\r\n        } else if(typeof fields['phone'] != 'undefined') {\r\n            if(!fields['phone'].match(/^\\+?([0-9]{2})\\)?[-. ]?([0-9]{3})[-. ]?([0-9]{3}?[-. ]?([0-9]{3}))$/) && !fields['phone'].match(/^\\(?([0-9]{3})\\)?[-. ]?([0-9]{3})[-. ]?([0-9]{3})$/) && !fields['phone'].match(/^([0-9]{9})$/)) {\r\n                isValid = false;\r\n                errors['phone'] = t('register.errors.incorrectPhoneFormat');\r\n            }\r\n        }\r\n\r\n        if(!fields['position']) {\r\n            isValid = false;\r\n            errors['position'] = t('misc.phrases.field') + ' \\'' + t('register.position') + '\\'' +  t('register.errors.requiredFieldIsEmpty');\r\n        } else if(typeof fields['position'] !== 'undefined') {\r\n            if(!fields['position'].match(/^[a-zA-Z_ ]+$/)) {\r\n                isValid = false;\r\n                errors['position'] = t('register.errors.allowedCharsOnly');\r\n            }\r\n        }\r\n\r\n        if(!fields['company']) {\r\n            isValid = false;\r\n            errors['company'] = t('misc.phrases.field') + ' \\'' + t('register.company') + '\\'' + t('register.errors.requiredFieldIsEmpty');\r\n        } else if(typeof fields['company'] !== 'undefined') {\r\n            if(!fields['company'].match(/^[a-zA-Z0-9\\-. ]+$/)) {\r\n                isValid = false;\r\n                errors['company'] = t('register.errors.allowedCharsOnly');\r\n            }\r\n        }\r\n\r\n        if(!fields['password']) {\r\n            isValid = false;\r\n            errors['password'] = t('misc.phrases.field') + ' \\'' + t('register.password') + '\\'' + t('register.errors.requiredFieldIsEmpty');\r\n        } else if(typeof fields['password'] !== 'undefined') {\r\n            if(fields['password'].length < 6) {\r\n                isValid = false;\r\n                errors['password'] = t('register.errors.passwordTooShort');\r\n            }\r\n            if(fields['password'] !== fields['confirm']) {\r\n                isValid = false;\r\n                errors['password'] = t('register.errors.passwordsDoNotMatch');\r\n            }\r\n        }\r\n\r\n        if(!fields['confirm']) {\r\n            isValid = false;\r\n            errors['confirm'] = t('register.errors.confirmPasswordIsEmpty');\r\n        } else if(typeof fields['confirm'] !== 'undefined') {\r\n            if(fields['confirm'] !== fields['password']) {\r\n                isValid = false;\r\n                errors['confirm'] = t('register.errors.passwordsDoNotMatch');\r\n            }\r\n        }\r\n\r\n        this.setState({errors: errors});\r\n\r\n        return isValid;\r\n    }\r\n\r\n    onFormSubmit = (event, errors) => {\r\n        event.preventDefault();\r\n        const fields = this.state.fields;\r\n        const {t} = this.props;\r\n\r\n        if(this.validateForm()) {\r\n            axios.post('http://localhost:3300/auth/register', {\r\n                firstname: fields['firstname'],\r\n                lastname: fields['lastname'],\r\n                username: fields['username'],\r\n                email: fields['email'],\r\n                phone: fields['phone'],\r\n                position: fields['position'],\r\n                company: fields['company'],\r\n                password: fields['password']\r\n            }).then((response) => {\r\n                alert(t('register.success'));\r\n            })\r\n            .catch(error => {\r\n                let err = document.getElementById('serverErrorMsg');\r\n                if(err) {\r\n                    if(error.response.data.type === 'AccountDuplication') {\r\n                        err.innerHTML = t('register.errors.serverResponses.userAlreadyExists');\r\n                        err.style.display = 'block';\r\n                    } else {\r\n                        err.innerHTML = error.response;\r\n                    }\r\n                }\r\n            });\r\n        } else {\r\n            let errors = document.querySelectorAll('.error-msg-span');\r\n            for(var i = 0; i < errors.length; i++) {\r\n                errors[i].style.display = 'block';\r\n            }\r\n        }\r\n    }\r\n        \r\n    render() {\r\n        const {t} = this.props;\r\n\r\n        return(\r\n            <div className=\"card\">\r\n                <p className=\"card-title\">{t('register.title')}</p><hr className=\"card-hr\" />\r\n                <form className=\"card-form\" onSubmit={this.onFormSubmit}>\r\n                    <label htmlFor=\"firstname\">{t('register.firstname')}</label>\r\n                    <input onChange={this.onChange.bind(this, 'firstname')} value={this.state.fields['firstname']} type=\"firstname\" className=\"\" name=\"firstname\" />\r\n                    <span className=\"error-msg-span\">{this.state.errors[\"firstname\"]}</span>\r\n                    <label htmlFor=\"lastname\">{t('register.lastname')}</label>\r\n                    <input onChange={this.onChange.bind(this, 'lastname')} value={this.state.fields['lastname']} type=\"lastname\" className=\"\" name=\"lastname\" />\r\n                    <span className=\"error-msg-span\">{this.state.errors[\"lastname\"]}</span>\r\n                    <label htmlFor=\"username\">{t('register.username')}</label>\r\n                    <input onChange={this.onChange.bind(this, 'username')} value={this.state.fields['username']} type=\"username\" className=\"\" name=\"username\" />\r\n                    <span className=\"error-msg-span\">{this.state.errors[\"username\"]}</span>\r\n                    <label htmlFor=\"email\">{t('register.email')}</label>\r\n                    <input onChange={this.onChange.bind(this, 'email')} value={this.state.fields['email']} type=\"email\" className=\"\" name=\"email\" />\r\n                    <span className=\"error-msg-span\">{this.state.errors[\"email\"]}</span>\r\n                    <label htmlFor=\"phone\">{t('register.phone')}</label>\r\n                    <input onChange={this.onChange.bind(this, 'phone')} value={this.state.fields['phone']} type=\"phone\" className=\"\" name=\"phone\" />\r\n                    <span className=\"error-msg-span\">{this.state.errors[\"phone\"]}</span>\r\n                    <label htmlFor=\"position\">{t('register.position')}</label>\r\n                    <input onChange={this.onChange.bind(this, 'position')} value={this.state.fields['position']} type=\"position\" className=\"\" name=\"position\" />\r\n                    <span className=\"error-msg-span\">{this.state.errors[\"position\"]}</span>\r\n                    <label htmlFor=\"company\">{t('register.company')}</label>\r\n                    <input onChange={this.onChange.bind(this, 'company')} value={this.state.fields['company']} type=\"company\" className=\"\" name=\"company\" />\r\n                    <span className=\"error-msg-span\">{this.state.errors[\"company\"]}</span>\r\n                    <label htmlFor=\"password\">{t('register.password')}</label>\r\n                    <input type=\"password\" onChange={this.onChange.bind(this, 'password')} value={this.state.fields['password']} className=\"\" id=\"password\" />\r\n                    <span className=\"error-msg-span\">{this.state.errors[\"password\"]}</span>\r\n                    <label htmlFor=\"confirm\">{t('register.confirm')}</label>\r\n                    <input type=\"password\" onChange={this.onChange.bind(this, 'confirm')} value={this.state.fields['confirm']} className=\"\" id=\"confirm\" />\r\n                    <span className=\"error-msg-span\">{this.state.errors[\"confirm\"]}</span>\r\n                    <div class=\"card-form-divider\">\r\n                        <button type=\"submit\" className=\"card-form-button\">{t('register.submit')}</button>\r\n                        <button type=\"reset\" onClick={this.resetForm} className=\"card-form-button\" >{t('register.reset')}</button>\r\n                        <button type=\"button\" className=\"card-form-button\"><Link to=\"/\" className=\"card-form-button-link\">{t('register.cancel')}</Link></button>\r\n                    </div>\r\n                    <span className=\"error-msg-span\" id=\"serverErrorMsg\"></span>\r\n                </form>\r\n                <p className=\"card-form-reminder\">{t('register.loginTip')} <Link to=\"/login\">{t('register.loginLink')}</Link></p>\r\n            </div>\r\n        )\r\n    }    \r\n}\r\n\r\nconst RegisterTranslation = withTranslation('common')(Register);\r\n\r\nexport default RegisterTranslation;\r\n\r\n// TODO: FIX FORM VALIDATION MESSAGES DISPLAY !!!","D:\\studia\\PRACA DYPLOMOWA\\hermes\\client\\src\\components\\Nav\\Sidebar.js",[],"D:\\studia\\PRACA DYPLOMOWA\\hermes\\client\\src\\components\\Dashboard\\Dashboard.js",["78"],"import React from 'react';\r\nimport {withTranslation} from 'react-i18next';\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport { faUsers, faTasks, faCogs, faProjectDiagram, faHistory } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport axios from 'axios';\r\n\r\nimport ProjectList from './ProjectList';\r\nimport TeamUserList from './UserList';\r\nimport TaskList from './TaskList';\r\nimport Recent from './Recent';\r\nimport ActivityList from './ActivityList';\r\n\r\nimport '../../assets/css/style.css';\r\nimport '../../assets/css/dashboard.css';\r\n\r\nlibrary.add(faUsers, faTasks, faCogs, faProjectDiagram, faHistory);\r\n\r\nclass Dashboard extends React.Component {\r\n    render() {\r\n        const {t} = this.props;\r\n        return(\r\n            <div className=\"dashboard\">\r\n                <div className=\"tab projects\">\r\n                    <p className=\"tab-title\"><FontAwesomeIcon icon=\"project-diagram\" size=\"xs\" />{t('dashboard.projects.title')}</p>\r\n                    <ProjectList />\r\n                </div>\r\n                <div className=\"tab team\">\r\n                    <p className=\"tab-title\"><FontAwesomeIcon icon=\"users\" size=\"xs\" />{t('dashboard.team.title')}</p>\r\n                    <TeamUserList />\r\n                </div>\r\n                <div className=\"tab tasks\">\r\n                    <p className=\"tab-title\"><FontAwesomeIcon icon=\"tasks\" size=\"xs\" />{t('dashboard.tasks.title')}</p>\r\n                    <TaskList />\r\n                </div>\r\n                <div className=\"tab recent\">\r\n                    <p className=\"tab-title\"><FontAwesomeIcon icon=\"history\" size=\"xs\" />{t('dashboard.recent.title')}</p>\r\n                    <Recent />\r\n                </div>\r\n                <div className=\"tab activities\">\r\n                    <p className=\"tab-title\"><FontAwesomeIcon icon=\"cogs\" size=\"xs\" />{t('dashboard.activities.title')}</p>\r\n                    <ActivityList />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst DashboardTranslation = withTranslation('common')(Dashboard);\r\n\r\nexport default DashboardTranslation;","D:\\studia\\PRACA DYPLOMOWA\\hermes\\client\\src\\components\\Nav\\Login.js",["79"],"D:\\studia\\PRACA DYPLOMOWA\\hermes\\client\\src\\components\\Dashboard\\ProjectList.js",["80"],"import React from 'react';\r\nimport {withTranslation} from 'react-i18next';\r\n\r\nimport ProjectItem from '../Project/Project';\r\n\r\nimport '../../../assets/css/dashboard.css';\r\n\r\nclass ProjectList extends React.Component {\r\n    state = { first: ['A', 'B', 'C', 'D'], second: ['1', '2', '3', '4']};\r\n\r\n    render() {\r\n        let items = [];\r\n        this.state.first.forEach(first => {\r\n            this.state.second.forEach(second => {\r\n                items.push(<ProjectItem first={first} second={second} />)\r\n            });\r\n        });\r\n        const {t} = this.props;\r\n        return(\r\n            <table class=\"tab-table\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Name</th>\r\n                        <th>Points</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {items}\r\n                </tbody>\r\n            </table>\r\n        )\r\n    }    \r\n}\r\n\r\nconst ProjectListTranslation = withTranslation('common')(ProjectList);\r\n\r\nexport default ProjectListTranslation;","D:\\studia\\PRACA DYPLOMOWA\\hermes\\client\\src\\components\\Dashboard\\TaskList.js",["81"],"import React from 'react';\r\nimport {withTranslation} from 'react-i18next';\r\n\r\nimport '../../../assets/css/dashboard.css';\r\n\r\nclass Tasks extends React.Component {\r\n    render() {\r\n        const {t} = this.props;\r\n        return(\r\n            <table class=\"tab-table\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Name</th>\r\n                        <th>Points</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td>Dom</td>\r\n                        <td>6000</td>\r\n                    </tr>\r\n                    <tr class=\"active-row\">\r\n                        <td>Melissa</td>\r\n                        <td>5150</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Dom</td>\r\n                        <td>6000</td>\r\n                    </tr>\r\n                    <tr class=\"active-row\">\r\n                        <td>Melissa</td>\r\n                        <td>5150</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Dom</td>\r\n                        <td>6000</td>\r\n                    </tr>\r\n                    <tr class=\"active-row\">\r\n                        <td>Melissa</td>\r\n                        <td>5150</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Dom</td>\r\n                        <td>6000</td>\r\n                    </tr>\r\n                    <tr class=\"active-row\">\r\n                        <td>Melissa</td>\r\n                        <td>5150</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Dom</td>\r\n                        <td>6000</td>\r\n                    </tr>\r\n                    <tr class=\"active-row\">\r\n                        <td>Melissa</td>\r\n                        <td>5150</td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        )\r\n    }    \r\n}\r\n\r\nconst TasksTranslation = withTranslation('common')(Tasks);\r\n\r\nexport default TasksTranslation;","D:\\studia\\PRACA DYPLOMOWA\\hermes\\client\\src\\components\\Dashboard\\UserList.js",["82"],"import React from 'react';\r\nimport {withTranslation} from 'react-i18next';\r\n\r\nimport '../../../assets/css/dashboard.css';\r\n\r\nclass Team extends React.Component {\r\n    render() {\r\n        const {t} = this.props;\r\n        return(\r\n            <table class=\"tab-table\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Name</th>\r\n                        <th>Points</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td>Dom</td>\r\n                        <td>6000</td>\r\n                    </tr>\r\n                    <tr class=\"active-row\">\r\n                        <td>Melissa</td>\r\n                        <td>5150</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Dom</td>\r\n                        <td>6000</td>\r\n                    </tr>\r\n                    <tr class=\"active-row\">\r\n                        <td>Melissa</td>\r\n                        <td>5150</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Dom</td>\r\n                        <td>6000</td>\r\n                    </tr>\r\n                    <tr class=\"active-row\">\r\n                        <td>Melissa</td>\r\n                        <td>5150</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Dom</td>\r\n                        <td>6000</td>\r\n                    </tr>\r\n                    <tr class=\"active-row\">\r\n                        <td>Melissa</td>\r\n                        <td>5150</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Dom</td>\r\n                        <td>6000</td>\r\n                    </tr>\r\n                    <tr class=\"active-row\">\r\n                        <td>Melissa</td>\r\n                        <td>5150</td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        )\r\n    }    \r\n}\r\n\r\nconst TeamTranslation = withTranslation('common')(Team);\r\n\r\nexport default TeamTranslation;","D:\\studia\\PRACA DYPLOMOWA\\hermes\\client\\src\\components\\Dashboard\\ActivityList.js",["83"],"import React from 'react';\r\nimport {withTranslation} from 'react-i18next';\r\n\r\nimport '../../../assets/css/dashboard.css';\r\n\r\nclass Activities extends React.Component {\r\n    render() {\r\n        const {t} = this.props;\r\n        return(\r\n            <table class=\"tab-table\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Name</th>\r\n                        <th>Points</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td>Dom</td>\r\n                        <td>6000</td>\r\n                    </tr>\r\n                    <tr class=\"active-row\">\r\n                        <td>Melissa</td>\r\n                        <td>5150</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Dom</td>\r\n                        <td>6000</td>\r\n                    </tr>\r\n                    <tr class=\"active-row\">\r\n                        <td>Melissa</td>\r\n                        <td>5150</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Dom</td>\r\n                        <td>6000</td>\r\n                    </tr>\r\n                    <tr class=\"active-row\">\r\n                        <td>Melissa</td>\r\n                        <td>5150</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Dom</td>\r\n                        <td>6000</td>\r\n                    </tr>\r\n                    <tr class=\"active-row\">\r\n                        <td>Melissa</td>\r\n                        <td>5150</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Dom</td>\r\n                        <td>6000</td>\r\n                    </tr>\r\n                    <tr class=\"active-row\">\r\n                        <td>Melissa</td>\r\n                        <td>5150</td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        )\r\n    }    \r\n}\r\n\r\nconst ActivitiesTranslation = withTranslation('common')(Activities);\r\n\r\nexport default ActivitiesTranslation;","D:\\studia\\PRACA DYPLOMOWA\\hermes\\client\\src\\components\\Dashboard\\Recent.js",["84"],"import React from 'react';\r\nimport {withTranslation} from 'react-i18next';\r\n\r\nimport '../../../assets/css/dashboard.css';\r\n\r\nclass Recent extends React.Component {\r\n    render() {\r\n        const {t} = this.props;\r\n        return(\r\n            <table class=\"tab-table\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Name</th>\r\n                        <th>Points</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td>Dom</td>\r\n                        <td>6000</td>\r\n                    </tr>\r\n                    <tr class=\"active-row\">\r\n                        <td>Melissa</td>\r\n                        <td>5150</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Dom</td>\r\n                        <td>6000</td>\r\n                    </tr>\r\n                    <tr class=\"active-row\">\r\n                        <td>Melissa</td>\r\n                        <td>5150</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Dom</td>\r\n                        <td>6000</td>\r\n                    </tr>\r\n                    <tr class=\"active-row\">\r\n                        <td>Melissa</td>\r\n                        <td>5150</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Dom</td>\r\n                        <td>6000</td>\r\n                    </tr>\r\n                    <tr class=\"active-row\">\r\n                        <td>Melissa</td>\r\n                        <td>5150</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Dom</td>\r\n                        <td>6000</td>\r\n                    </tr>\r\n                    <tr class=\"active-row\">\r\n                        <td>Melissa</td>\r\n                        <td>5150</td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        )\r\n    }    \r\n}\r\n\r\nconst RecentTranslation = withTranslation('common')(Recent);\r\n\r\nexport default RecentTranslation;","D:\\studia\\PRACA DYPLOMOWA\\hermes\\client\\src\\components\\Project\\Project.js",[],["85","86"],"D:\\studia\\PRACA DYPLOMOWA\\hermes\\client\\src\\services\\i18n.js",[],{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","severity":1,"message":"92","line":6,"column":8,"nodeType":"93","messageId":"94","endLine":6,"endColumn":13},{"ruleId":"91","severity":1,"message":"95","line":6,"column":8,"nodeType":"93","messageId":"94","endLine":6,"endColumn":13},{"ruleId":"91","severity":1,"message":"96","line":58,"column":15,"nodeType":"93","messageId":"94","endLine":58,"endColumn":25},{"ruleId":"91","severity":1,"message":"97","line":18,"column":16,"nodeType":"93","messageId":"94","endLine":18,"endColumn":17},{"ruleId":"91","severity":1,"message":"97","line":8,"column":16,"nodeType":"93","messageId":"94","endLine":8,"endColumn":17},{"ruleId":"91","severity":1,"message":"97","line":8,"column":16,"nodeType":"93","messageId":"94","endLine":8,"endColumn":17},{"ruleId":"91","severity":1,"message":"97","line":8,"column":16,"nodeType":"93","messageId":"94","endLine":8,"endColumn":17},{"ruleId":"91","severity":1,"message":"97","line":8,"column":16,"nodeType":"93","messageId":"94","endLine":8,"endColumn":17},{"ruleId":"87","replacedBy":"98"},{"ruleId":"89","replacedBy":"99"},"no-native-reassign",["100"],"no-negated-in-lhs",["101"],"no-unused-vars","'Login' is defined but never used.","Identifier","unusedVar","'axios' is defined but never used.","'reqPayload' is assigned a value but never used.","'t' is assigned a value but never used.",["100"],["101"],"no-global-assign","no-unsafe-negation"]