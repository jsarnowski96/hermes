[{"D:\\studia\\PRACA DYPLOMOWA\\hermes\\client\\src\\index.js":"1","D:\\studia\\PRACA DYPLOMOWA\\hermes\\client\\src\\components\\App.js":"2","D:\\studia\\PRACA DYPLOMOWA\\hermes\\client\\src\\components\\Nav\\Contact.js":"3","D:\\studia\\PRACA DYPLOMOWA\\hermes\\client\\src\\components\\Nav\\About.js":"4","D:\\studia\\PRACA DYPLOMOWA\\hermes\\client\\src\\components\\Nav\\Home.js":"5","D:\\studia\\PRACA DYPLOMOWA\\hermes\\client\\src\\components\\Nav\\Register.js":"6","D:\\studia\\PRACA DYPLOMOWA\\hermes\\client\\src\\components\\Nav\\Sidebar.js":"7","D:\\studia\\PRACA DYPLOMOWA\\hermes\\client\\src\\components\\Dashboard\\Dashboard.js":"8","D:\\studia\\PRACA DYPLOMOWA\\hermes\\client\\src\\components\\Nav\\Login.js":"9","D:\\studia\\PRACA DYPLOMOWA\\hermes\\client\\src\\components\\Dashboard\\ProjectList.js":"10","D:\\studia\\PRACA DYPLOMOWA\\hermes\\client\\src\\components\\Dashboard\\TaskList.js":"11","D:\\studia\\PRACA DYPLOMOWA\\hermes\\client\\src\\components\\Dashboard\\UserList.js":"12","D:\\studia\\PRACA DYPLOMOWA\\hermes\\client\\src\\components\\Dashboard\\ActivityList.js":"13","D:\\studia\\PRACA DYPLOMOWA\\hermes\\client\\src\\components\\Dashboard\\Recent.js":"14","D:\\studia\\PRACA DYPLOMOWA\\hermes\\client\\src\\components\\Project\\Project.js":"15","D:\\studia\\PRACA DYPLOMOWA\\hermes\\client\\src\\services\\i18n.js":"16","D:\\studia\\PRACA DYPLOMOWA\\hermes\\client\\src\\components\\Project\\NewProject.js":"17","D:\\studia\\PRACA DYPLOMOWA\\hermes\\client\\src\\middleware\\jwtSessionStorage.js":"18","D:\\studia\\PRACA DYPLOMOWA\\hermes\\client\\src\\middleware\\languageLocalStorage.js":"19"},{"size":617,"mtime":1610049464615,"results":"20","hashOfConfig":"21"},{"size":1936,"mtime":1612981018213,"results":"22","hashOfConfig":"21"},{"size":663,"mtime":1610045482173,"results":"23","hashOfConfig":"21"},{"size":653,"mtime":1610045477086,"results":"24","hashOfConfig":"21"},{"size":24767,"mtime":1610045490873,"results":"25","hashOfConfig":"21"},{"size":12169,"mtime":1611003855717,"results":"26","hashOfConfig":"21"},{"size":2886,"mtime":1610049895450,"results":"27","hashOfConfig":"21"},{"size":3713,"mtime":1612989192028,"results":"28","hashOfConfig":"21"},{"size":6285,"mtime":1612989306469,"results":"29","hashOfConfig":"21"},{"size":3342,"mtime":1612984469651,"results":"30","hashOfConfig":"21"},{"size":2650,"mtime":1612983885542,"results":"31","hashOfConfig":"21"},{"size":2646,"mtime":1612983882027,"results":"32","hashOfConfig":"21"},{"size":3236,"mtime":1612983873393,"results":"33","hashOfConfig":"21"},{"size":2654,"mtime":1612983878857,"results":"34","hashOfConfig":"21"},{"size":891,"mtime":1610651531496,"results":"35","hashOfConfig":"21"},{"size":410,"mtime":1609945680158,"results":"36","hashOfConfig":"21"},{"size":4335,"mtime":1610815697873,"results":"37","hashOfConfig":"21"},{"size":1038,"mtime":1612981503450,"results":"38","hashOfConfig":"21"},{"size":436,"mtime":1612981016882,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"1ldetr1",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"42"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"42"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"42"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"42"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"42"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"42"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"42"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"42"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"42"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"D:\\studia\\PRACA DYPLOMOWA\\hermes\\client\\src\\index.js",[],["89","90"],"D:\\studia\\PRACA DYPLOMOWA\\hermes\\client\\src\\components\\App.js",[],"D:\\studia\\PRACA DYPLOMOWA\\hermes\\client\\src\\components\\Nav\\Contact.js",[],"D:\\studia\\PRACA DYPLOMOWA\\hermes\\client\\src\\components\\Nav\\About.js",[],"D:\\studia\\PRACA DYPLOMOWA\\hermes\\client\\src\\components\\Nav\\Home.js",[],"D:\\studia\\PRACA DYPLOMOWA\\hermes\\client\\src\\components\\Nav\\Register.js",["91"],"import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {withTranslation} from 'react-i18next';\r\nimport axios from 'axios';\r\n\r\nimport Login from '../Nav/Login';\r\n\r\nimport '../../assets/css/register.css';\r\nimport '../../assets/css/style.css';\r\nimport '../../assets/css/errors.css';\r\n\r\nclass Register extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            fields: {},\r\n            errors: {}\r\n        };\r\n\r\n        this.resetForm = this.resetForm.bind(this);\r\n    }\r\n\r\n    resetForm() {\r\n        let fields = this.state.fields;\r\n        let errors = this.state.errors;\r\n\r\n        fields['firstname'] = '';\r\n        fields['lastname'] = '';\r\n        fields['username'] = '';\r\n        fields['email'] = '';\r\n        fields['phone'] = '';\r\n        fields['position'] = '';\r\n        fields['company'] = '';\r\n        fields['password'] = '';\r\n        fields['confirm'] = '';\r\n\r\n        errors['firstname'] = '';\r\n        errors['lastname'] = '';\r\n        errors['username'] = '';\r\n        errors['email'] = '';\r\n        errors['phone'] = '';\r\n        errors['position'] = '';\r\n        errors['company'] = '';\r\n        errors['password'] = '';\r\n        errors['confirm'] = '';\r\n\r\n        document.getElementById('serverErrorMsg').innerHTML = '';\r\n\r\n        this.setState({fields, errors});\r\n    }\r\n\r\n    onChange(field, event) {\r\n        let fields = this.state.fields;\r\n        let errors = this.state.errors;\r\n        fields[field] = event.target.value;       \r\n        errors[field] = '';\r\n        this.setState({fields});\r\n    }\r\n\r\n    validateForm() {\r\n        let fields = this.state.fields;\r\n        let errors = this.state.errors;\r\n        let isValid = true;\r\n        const {t} = this.props;\r\n\r\n        if(!fields['firstname']) {\r\n            isValid = false;\r\n            errors['firstname'] = t('misc.phrases.field') + ' \\'' + t('register.firstname') + '\\'' + t('register.errors.requiredFieldIsEmpty');\r\n        } else if(typeof fields['firstname'] !== 'undefined') {\r\n            if(!fields['firstname'].match(/^[a-zA-Z_ ]+$/)) {\r\n                isValid = false;\r\n                errors['firstname'] = t('register.errors.allowedCharsOnly');\r\n            }\r\n        }\r\n\r\n        if(!fields['lastname']) {\r\n            isValid = false;\r\n            errors['lastname'] = t('misc.phrases.field') + ' \\'' + t('register.lastname') + '\\'' + t('register.errors.requiredFieldIsEmpty');\r\n        } else if(typeof fields['lastname'] !== 'undefined') {\r\n            if(!fields['lastname'].match(/^[a-zA-Z_ ]+$/)) {\r\n                isValid = false;\r\n                errors['lastname'] = t('register.errors.allowedCharsOnly');\r\n            }\r\n        }\r\n\r\n        if(!fields['username']) {\r\n            isValid = false;\r\n            errors['username'] = t('misc.phrases.field') + ' \\'' + t('register.username') + '\\'' + t('register.errors.requiredFieldIsEmpty');\r\n        } else if(typeof fields['username'] !== 'undefined') {\r\n            if(!fields['username'].match(/^[a-zA-Z0-9\\-_.]+$/)) {\r\n                isValid = false;\r\n                errors['username'] = t('register.errors.allowedCharsOnly');\r\n            }\r\n        }\r\n\r\n        if(!fields['email']) {\r\n            isValid = false;\r\n            errors['email'] = t('misc.phrases.field') + ' \\'' + t('register.email') + '\\'' + t('register.errors.requiredFieldIsEmpty');\r\n        } else if(typeof fields['email'] != 'undefined') {\r\n            if(!fields['email'].match(/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/)) {\r\n                ///^(([^<>()[\\]\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i\r\n                isValid = false;\r\n                errors['email'] = t('register.errors.emailNotValid');\r\n            }\r\n        }\r\n\r\n        if(!fields['phone']) {\r\n            isValid = false;\r\n            errors['phone'] = t('misc.phrases.field') + ' \\'' + t('register.phone') + '\\'' + t('register.errors.requiredFieldIsEmpty');\r\n        } else if(typeof fields['phone'] != 'undefined') {\r\n            if(!fields['phone'].match(/^\\+?([0-9]{2})\\)?[-. ]?([0-9]{3})[-. ]?([0-9]{3}?[-. ]?([0-9]{3}))$/) && !fields['phone'].match(/^\\(?([0-9]{3})\\)?[-. ]?([0-9]{3})[-. ]?([0-9]{3})$/) && !fields['phone'].match(/^([0-9]{9})$/)) {\r\n                isValid = false;\r\n                errors['phone'] = t('register.errors.incorrectPhoneFormat');\r\n            }\r\n        }\r\n\r\n        if(!fields['position']) {\r\n            isValid = false;\r\n            errors['position'] = t('misc.phrases.field') + ' \\'' + t('register.position') + '\\'' +  t('register.errors.requiredFieldIsEmpty');\r\n        } else if(typeof fields['position'] !== 'undefined') {\r\n            if(!fields['position'].match(/^[a-zA-Z_ ]+$/)) {\r\n                isValid = false;\r\n                errors['position'] = t('register.errors.allowedCharsOnly');\r\n            }\r\n        }\r\n\r\n        if(!fields['company']) {\r\n            isValid = false;\r\n            errors['company'] = t('misc.phrases.field') + ' \\'' + t('register.company') + '\\'' + t('register.errors.requiredFieldIsEmpty');\r\n        } else if(typeof fields['company'] !== 'undefined') {\r\n            if(!fields['company'].match(/^[a-zA-Z0-9\\-. ]+$/)) {\r\n                isValid = false;\r\n                errors['company'] = t('register.errors.allowedCharsOnly');\r\n            }\r\n        }\r\n\r\n        if(!fields['password']) {\r\n            isValid = false;\r\n            errors['password'] = t('misc.phrases.field') + ' \\'' + t('register.password') + '\\'' + t('register.errors.requiredFieldIsEmpty');\r\n        } else if(typeof fields['password'] !== 'undefined') {\r\n            if(fields['password'].length < 6) {\r\n                isValid = false;\r\n                errors['password'] = t('register.errors.passwordTooShort');\r\n            }\r\n            if(fields['password'] !== fields['confirm']) {\r\n                isValid = false;\r\n                errors['password'] = t('register.errors.passwordsDoNotMatch');\r\n            }\r\n        }\r\n\r\n        if(!fields['confirm']) {\r\n            isValid = false;\r\n            errors['confirm'] = t('register.errors.confirmPasswordIsEmpty');\r\n        } else if(typeof fields['confirm'] !== 'undefined') {\r\n            if(fields['confirm'] !== fields['password']) {\r\n                isValid = false;\r\n                errors['confirm'] = t('register.errors.passwordsDoNotMatch');\r\n            }\r\n        }\r\n\r\n        this.setState({errors: errors});\r\n\r\n        return isValid;\r\n    }\r\n\r\n    onFormSubmit = (event, errors) => {\r\n        event.preventDefault();\r\n        const fields = this.state.fields;\r\n        const {t} = this.props;\r\n\r\n        if(this.validateForm()) {\r\n            axios.post('http://localhost:3300/auth/register', {\r\n                firstname: fields['firstname'],\r\n                lastname: fields['lastname'],\r\n                username: fields['username'],\r\n                email: fields['email'],\r\n                phone: fields['phone'],\r\n                position: fields['position'],\r\n                company: fields['company'],\r\n                password: fields['password']\r\n            }).then((response) => {\r\n                console.log(response);\r\n            })\r\n            .catch(error => {\r\n                let err = document.getElementById('serverErrorMsg');\r\n                if(err) {\r\n                    if(error.response.data.type === 'AccountDuplication') {\r\n                        err.innerHTML = t('register.errors.serverResponses.userAlreadyExists');\r\n                        err.style.display = 'block';\r\n                    } else {\r\n                        err.innerHTML = error.response;\r\n                    }\r\n                }\r\n            });\r\n        } else {\r\n            let errors = document.querySelectorAll('.error-msg-span');\r\n            for(var i = 0; i < errors.length; i++) {\r\n                errors[i].style.display = 'block';\r\n            }\r\n        }\r\n    }\r\n        \r\n    render() {\r\n        const {t} = this.props;\r\n\r\n        return(\r\n            <div className=\"card\">\r\n                <p className=\"card-title\">{t('register.title')}</p><hr className=\"card-hr\" />\r\n                <form className=\"card-form\" onSubmit={this.onFormSubmit}>\r\n                    <label htmlFor=\"firstname\">{t('register.firstname')}</label>\r\n                    <input onChange={this.onChange.bind(this, 'firstname')} value={this.state.fields['firstname']} type=\"firstname\" className=\"\" name=\"firstname\" />\r\n                    <span className=\"error-msg-span\">{this.state.errors[\"firstname\"]}</span>\r\n                    <label htmlFor=\"lastname\">{t('register.lastname')}</label>\r\n                    <input onChange={this.onChange.bind(this, 'lastname')} value={this.state.fields['lastname']} type=\"lastname\" className=\"\" name=\"lastname\" />\r\n                    <span className=\"error-msg-span\">{this.state.errors[\"lastname\"]}</span>\r\n                    <label htmlFor=\"username\">{t('register.username')}</label>\r\n                    <input onChange={this.onChange.bind(this, 'username')} value={this.state.fields['username']} type=\"username\" className=\"\" name=\"username\" />\r\n                    <span className=\"error-msg-span\">{this.state.errors[\"username\"]}</span>\r\n                    <label htmlFor=\"email\">{t('register.email')}</label>\r\n                    <input onChange={this.onChange.bind(this, 'email')} value={this.state.fields['email']} type=\"email\" className=\"\" name=\"email\" />\r\n                    <span className=\"error-msg-span\">{this.state.errors[\"email\"]}</span>\r\n                    <label htmlFor=\"phone\">{t('register.phone')}</label>\r\n                    <input onChange={this.onChange.bind(this, 'phone')} value={this.state.fields['phone']} type=\"phone\" className=\"\" name=\"phone\" />\r\n                    <span className=\"error-msg-span\">{this.state.errors[\"phone\"]}</span>\r\n                    <label htmlFor=\"position\">{t('register.position')}</label>\r\n                    <input onChange={this.onChange.bind(this, 'position')} value={this.state.fields['position']} type=\"position\" className=\"\" name=\"position\" />\r\n                    <span className=\"error-msg-span\">{this.state.errors[\"position\"]}</span>\r\n                    <label htmlFor=\"company\">{t('register.company')}</label>\r\n                    <input onChange={this.onChange.bind(this, 'company')} value={this.state.fields['company']} type=\"company\" className=\"\" name=\"company\" />\r\n                    <span className=\"error-msg-span\">{this.state.errors[\"company\"]}</span>\r\n                    <label htmlFor=\"password\">{t('register.password')}</label>\r\n                    <input type=\"password\" onChange={this.onChange.bind(this, 'password')} value={this.state.fields['password']} className=\"\" id=\"password\" />\r\n                    <span className=\"error-msg-span\">{this.state.errors[\"password\"]}</span>\r\n                    <label htmlFor=\"confirm\">{t('register.confirm')}</label>\r\n                    <input type=\"password\" onChange={this.onChange.bind(this, 'confirm')} value={this.state.fields['confirm']} className=\"\" id=\"confirm\" />\r\n                    <span className=\"error-msg-span\">{this.state.errors[\"confirm\"]}</span>\r\n                    <div class=\"card-form-divider\">\r\n                        <button type=\"submit\" className=\"card-form-button\">{t('register.submit')}</button>\r\n                        <button type=\"reset\" onClick={this.resetForm} className=\"card-form-button\" >{t('register.reset')}</button>\r\n                        <button type=\"button\" className=\"card-form-button\"><Link to=\"/\" className=\"card-form-button-link\">{t('register.cancel')}</Link></button>\r\n                    </div>\r\n                    <span className=\"error-msg-span\" id=\"serverErrorMsg\"></span>\r\n                </form>\r\n                <p className=\"card-form-reminder\">{t('register.loginTip')} <Link to=\"/login\">{t('register.loginLink')}</Link></p>\r\n            </div>\r\n        )\r\n    }    \r\n}\r\n\r\nconst RegisterTranslation = withTranslation('common')(Register);\r\n\r\nexport default RegisterTranslation;\r\n\r\n// TODO: FIX FORM VALIDATION MESSAGES DISPLAY !!!","D:\\studia\\PRACA DYPLOMOWA\\hermes\\client\\src\\components\\Nav\\Sidebar.js",["92"],"import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {withTranslation} from 'react-i18next';\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport { faCheckSquare, faCoffee, faHome, faPaperPlane, faInfoCircle, faUserPlus, faFingerprint } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nimport '../../assets/css/sidebar.css';\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faHome, faPaperPlane, faInfoCircle, faUserPlus, faFingerprint);\r\n\r\nclass Sidebar extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.onLanguageChange = this.onLanguageChange.bind(this);\r\n    }\r\n\r\n    onLanguageChange(event) {\r\n        const {i18n} = this.props;\r\n        if(event.target.name === 'pl') {\r\n            localStorage.setItem('language', 'pl');\r\n            i18n.changeLanguage('pl');\r\n        } else if(event.target.name === 'en') {\r\n            localStorage.setItem('language', 'en');\r\n            i18n.changeLanguage('en');\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {t, i18n} = this.props;\r\n\r\n        return(\r\n            <nav className=\"navbar\">\r\n                <ul className=\"navbar-nav\">\r\n                    <Link to=\"/\" className=\"navbar-title\">Hermes</Link><hr className=\"navbar-title-hr\" />\r\n                    <li className=\"nav-item\"><Link to=\"/\" className=\"nav-link\"><FontAwesomeIcon icon=\"home\" size=\"lg\" /><span className=\"link-text\">{t('navbar.home')}</span></Link></li>\r\n                    <li className=\"nav-item\"><Link to=\"/login\" className=\"nav-link\"><FontAwesomeIcon icon=\"fingerprint\" size=\"lg\" /><span className=\"link-text\">{t('navbar.login')}</span></Link></li>\r\n                    <li className=\"nav-item\"><Link to=\"/register\" className=\"nav-link\"><FontAwesomeIcon icon=\"user-plus\" size=\"lg\" /><span className=\"link-text\">{t('navbar.register')}</span></Link></li>\r\n                    <li className=\"nav-item\"><Link to=\"/about\" className=\"nav-link\"><FontAwesomeIcon icon=\"info-circle\" size=\"lg\" /><span className=\"link-text\">{t('navbar.about')}</span></Link></li>\r\n                    <li className=\"nav-item\"><Link to=\"/contact\" className=\"nav-link\"><FontAwesomeIcon icon=\"paper-plane\" size=\"lg\" /><span className=\"link-text\">{t('navbar.contact')}</span></Link></li>\r\n                    <li className=\"nav-item lng-change\">\r\n                        <button type=\"button\" name='pl' style={{backgroundColor: \"white\"}} className=\"lng-button\" onClick={this.onLanguageChange}>PL</button>\r\n                        <button type=\"button\" name='en' style={{backgroundColor: \"red\"}} className=\"lng-button\"onClick={this.onLanguageChange}>EN</button>\r\n                    </li>\r\n                </ul>\r\n            </nav>\r\n        )\r\n    }\r\n}\r\n\r\nconst SidebarTranslation = withTranslation('common')(Sidebar);\r\n\r\nexport default SidebarTranslation;","D:\\studia\\PRACA DYPLOMOWA\\hermes\\client\\src\\components\\Dashboard\\Dashboard.js",["93","94"],"import React from 'react';\r\nimport {withTranslation} from 'react-i18next';\r\nimport {Redirect} from 'react-router';\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport { faUsers, faTasks, faCogs, faProjectDiagram, faHistory } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport ProjectList from './ProjectList';\r\nimport TeamUserList from './UserList';\r\nimport TaskList from './TaskList';\r\nimport Recent from './Recent';\r\nimport ActivityList from './ActivityList';\r\n\r\nimport Login from '../Nav/Login';\r\n\r\nimport getLanguageFromLocalStorage from '../../middleware/languageLocalStorage';\r\nimport getJwtDataFromSessionStorage from '../../middleware/jwtSessionStorage';\r\n\r\nimport '../../assets/css/style.css';\r\nimport '../../assets/css/dashboard.css';\r\n\r\nlibrary.add(faUsers, faTasks, faCogs, faProjectDiagram, faHistory);\r\n\r\nclass Dashboard extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        var jwt = getJwtDataFromSessionStorage();\r\n\r\n        if(jwt != null) {\r\n            this.state = {\r\n                auth: {\r\n                    userId: jwt.userId,\r\n                    refreshToken: jwt.refreshToken\r\n                }\r\n            }\r\n        } else {\r\n            this.state = {\r\n                auth: {\r\n                    userId: null,\r\n                    refreshToken: null\r\n                }\r\n            }\r\n        }\r\n\r\n        getLanguageFromLocalStorage();\r\n    }\r\n\r\n    render() {\r\n        const {t, i18n} = this.props;\r\n\r\n        if(this.state.auth.userId !== '' && this.state.auth.userId !== 'undefined' && this.state.auth.userId !== null && this.state.auth.refreshToken !== '' && this.state.auth.refreshToken !== 'undefined' && this.state.auth.refreshToken !== null) {\r\n            return(\r\n                <div className=\"dashboard\">\r\n                    <div className=\"tab projects\">\r\n                        <p className=\"tab-title\"><FontAwesomeIcon icon=\"project-diagram\" size=\"xs\" />{t('dashboard.projects.title')}</p>\r\n                        <ProjectList />\r\n                    </div>\r\n                    <div className=\"tab team\">\r\n                        <p className=\"tab-title\"><FontAwesomeIcon icon=\"users\" size=\"xs\" />{t('dashboard.team.title')}</p>\r\n                        <TeamUserList />\r\n                    </div>\r\n                    <div className=\"tab tasks\">\r\n                        <p className=\"tab-title\"><FontAwesomeIcon icon=\"tasks\" size=\"xs\" />{t('dashboard.tasks.title')}</p>\r\n                        <TaskList />\r\n                    </div>\r\n                    <div className=\"tab recent\">\r\n                        <p className=\"tab-title\"><FontAwesomeIcon icon=\"history\" size=\"xs\" />{t('dashboard.recent.title')}</p>\r\n                        <Recent />\r\n                    </div>\r\n                    <div className=\"tab activities\">\r\n                        <p className=\"tab-title\"><FontAwesomeIcon icon=\"cogs\" size=\"xs\" />{t('dashboard.activities.title')}</p>\r\n                        <ActivityList />\r\n                    </div>\r\n                </div>\r\n            )\r\n        } else {\r\n            return(\r\n                <Redirect to=\r\n                    {{\r\n                        pathname: '/login',\r\n                        state: {\r\n                            unauthorized: true,\r\n                            redirected: true\r\n                        }\r\n                    }}\r\n                />\r\n            ) \r\n        }\r\n        \r\n    }\r\n}\r\n\r\nconst DashboardTranslation = withTranslation('common')(Dashboard);\r\n\r\nexport default DashboardTranslation;\r\n\r\n// TODO 18.01 - FIX REACT ROUTER/REDIRECT ISSUE WITH LOGIN/DASHBOARD","D:\\studia\\PRACA DYPLOMOWA\\hermes\\client\\src\\components\\Nav\\Login.js",["95","96"],"import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {withTranslation} from 'react-i18next';\r\nimport {Redirect} from 'react-router';\r\nimport axios from 'axios';\r\n\r\nimport Dashboard from '../Dashboard/Dashboard'\r\n\r\nimport {getJwtDataFromSessionStorage, setJwtDataInSessionStorage} from '../../middleware/jwtSessionStorage';\r\n\r\nclass Login extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.jwt = getJwtDataFromSessionStorage();\r\n\r\n        this.state = {\r\n            unauthorized: true,\r\n            redirected: false,\r\n            fields: {},\r\n            errors: {}\r\n        };\r\n\r\n        if(this.props.location) {\r\n            if(this.props.location.state.unauthorized && this.props.location.state.redirected) {\r\n                this.setState({\r\n                    unauthorized: true,\r\n                    redirected: true\r\n                })\r\n            } else if(!this.props.location.unauthorized) {\r\n                this.setState({\r\n                    unauthorized: false\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        \r\n    }\r\n\r\n    onChange(field, event) {\r\n        let fields = this.state.fields;\r\n        let errors = this.state.errors;\r\n        fields[field] = event.target.value;       \r\n        errors[field] = '';\r\n        this.setState({fields});\r\n    }\r\n\r\n    validateForm() {\r\n        let fields = this.state.fields;\r\n        let errors = this.state.errors;\r\n        let isValid = true;\r\n        const {t} = this.props;\r\n\r\n        if(!fields['login']) {\r\n            isValid = false;\r\n            errors['login'] = t('misc.phrases.field') + ' \\'' + t('register.login') + '\\'' + t('register.errors.requiredFieldIsEmpty');\r\n        } else if(typeof fields['login'] !== 'undefined') {\r\n            if(!fields['login'].match(/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/) && !fields['login'].match(/^[a-zA-Z0-9\\-_.]+$/)) {\r\n                isValid = false;\r\n                errors['login'] = t('register.errors.loginNotValid');\r\n            }\r\n        }\r\n\r\n        if(!fields['password']) {\r\n            isValid = false;\r\n            errors['password'] = t('misc.phrases.field') + ' \\'' + t('register.password') + '\\'' + t('register.errors.requiredFieldIsEmpty');\r\n        }\r\n\r\n        this.setState({errors: errors});\r\n\r\n        return isValid;\r\n    }\r\n\r\n    onFormSubmit = (event, errors) => {\r\n        event.preventDefault();\r\n        const fields = this.state.fields;\r\n        const {t} = this.props;\r\n\r\n        if(this.validateForm()) {\r\n            axios.post('http://localhost:3300/auth/login', \r\n                {\r\n                    login: fields['login'],\r\n                    password: fields['password'],\r\n                }, \r\n                {\r\n                    withCredentials: true,\r\n                    auth: \r\n                    {\r\n                        username: fields['login'],\r\n                        password: fields['password']\r\n                    }\r\n            }).then((response) => {\r\n                if((response.data.user._id !== 'undefined' || response.data.user._id !== '' || response.data.user._id !== null) && (response.data.refreshToken !== 'undefined' || response.data.refreshToken !== '' || response.data.refreshToken !== null)) {\r\n                    setJwtDataInSessionStorage(response.data.user._id, response.data.refreshToken);\r\n                    if(this.jwt !== null && this.jwt !== '' && this.jwt !== 'undefined') {\r\n                        return <Redirect to=\"/dashboard\" />\r\n                    }\r\n                };\r\n            })\r\n            .catch(function(error) {\r\n                let err = document.getElementById('serverErrorMsg');\r\n                if(err) {\r\n                    if(error.response.data.type === 'AccountDuplication') {\r\n                        err.innerHTML = t('register.errors.serverResponses.userAlreadyExists');\r\n                        err.style.display = 'block';\r\n                    }\r\n                }\r\n            });\r\n        } else {\r\n            let errors = document.querySelectorAll('.error-msg-span');\r\n            for(var i = 0; i < errors.length; i++) {\r\n                errors[i].style.display = 'block';\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {t, i18n} = this.props;\r\n\r\n        return(\r\n            <div className=\"card\">\r\n                <p className=\"card-title\">{t('login.title')}</p><hr className=\"card-hr\" />\r\n                <form className=\"card-form\" onSubmit={this.onFormSubmit}>\r\n                    <label htmlFor=\"login\">{t('login.login')}</label>\r\n                    <input onChange={this.onChange.bind(this, 'login')} value={this.state.fields['login']} type=\"login\" className=\"\" id=\"login\" name=\"login\" />\r\n                    <span className=\"error-msg-span\">{this.state.errors[\"login\"]}</span>\r\n                    <label htmlFor=\"password\">{t('login.password')}</label>\r\n                    <input onChange={this.onChange.bind(this, 'password')} value={this.state.fields['password']} type=\"password\" className=\"\" id=\"password\" name=\"password\" />\r\n                    <span className=\"error-msg-span\">{this.state.errors[\"password\"]}</span>\r\n                    <div class=\"card-form-divider\">\r\n                        <button type=\"submit\" className=\"card-form-button\">{t('login.submit')}</button>\r\n                        <button type=\"button\" className=\"card-form-button\"><Link to=\"/\" className=\"card-form-button-link\">{t('login.cancel')}</Link></button>\r\n                    </div>\r\n                    {this.state.unauthorized && this.state.redirected ? (\r\n                        <span className=\"error-msg-span\" style={{display: \"block\"}} id=\"serverErrorMsg\">UNAUTHORIZED</span>\r\n                    ) : (\r\n                        <span className=\"error-msg-span\" id=\"serverErrorMsg\"></span>\r\n                    )}\r\n                </form>\r\n                <p className=\"card-form-reminder\">{t('login.registerTip')} <Link to=\"/register\">{t('login.registerLink')}</Link></p>\r\n            </div>\r\n        )\r\n    }    \r\n}\r\n\r\nconst LoginTranslation = withTranslation('common')(Login);\r\n\r\nexport default LoginTranslation;\r\n\r\n// TODO 18.01 - FIX REACT ROUTER/REDIRECT ISSUE WITH LOGIN/DASHBOARD","D:\\studia\\PRACA DYPLOMOWA\\hermes\\client\\src\\components\\Dashboard\\ProjectList.js",["97","98","99","100"],"import React from 'react';\r\nimport {withTranslation} from 'react-i18next';\r\nimport axios from 'axios';\r\n\r\nimport getLanguageFromLocalStorage from '../../middleware/languageLocalStorage';\r\nimport getJwtDataFromSessionStorage from '../../middleware/jwtSessionStorage';\r\n\r\nimport ProjectItem from '../Project/Project';\r\nimport NewProject from '../Project/NewProject';\r\n\r\nimport Login from '../Nav/Login';\r\n\r\nimport '../../assets/css/dashboard.css';\r\n\r\nclass ProjectList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        var jwt = getJwtDataFromSessionStorage();\r\n\r\n        if(jwt != null) {\r\n            this.state = {\r\n                auth: {\r\n                    userId: jwt.userId,\r\n                    refreshToken: jwt.refreshToken\r\n                },\r\n                associatedProjects: []\r\n            }\r\n        } else {\r\n            this.state = {\r\n                auth: {\r\n                    userId: null,\r\n                    refreshToken: null\r\n                },\r\n                associatedProjects: []\r\n            }\r\n        }\r\n\r\n        this.getProjectList = this.getProjectList.bind(this);\r\n\r\n        getLanguageFromLocalStorage();\r\n\r\n        this.getProjectList();\r\n    }\r\n\r\n    getProjectList() {\r\n        const headers = {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${this.state.auth.refreshToken}`\r\n        };\r\n\r\n        axios.post('http://localhost:3300/project/list', \r\n        {\r\n            _id: this.state.auth.userId    \r\n        },\r\n        {\r\n            withCredentials: true,\r\n            headers: headers\r\n        })\r\n        .then((response) => {\r\n            if(response.data.associatedProjects !== 'undefined' && response.data.associatedProjects !== '' && response.data.associatedProjects !== null && response.data.associatedProjects.length > 0) {\r\n                this.setState({associatedProjects: response.data.associatedProjects});\r\n            }\r\n        })\r\n        .catch((error) => {\r\n            console.log(error);\r\n            console.log(error.response);\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {t, i18n} = this.props;\r\n\r\n        if(this.state.auth.userId !== '' && this.state.auth.userId !== 'undefined' && this.state.auth.userId !== null && this.state.auth.refreshToken !== '' && this.state.auth.refreshToken !== null) {\r\n            \r\n            return(\r\n                <table class=\"tab-table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Name</th>\r\n                            <th>Category</th>\r\n                            <th>Due date</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {this.state.associatedProjects.map((project, index) => (\r\n                            <tr>\r\n                                <td>{project.name}</td>\r\n                                <td>{project.category}</td>\r\n                                <td>{project.due_date}</td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </table>\r\n            )\r\n        } else {\r\n            return <Login />\r\n        }\r\n    }    \r\n}\r\n\r\nconst ProjectListTranslation = withTranslation('common')(ProjectList);\r\n\r\nexport default ProjectListTranslation;","D:\\studia\\PRACA DYPLOMOWA\\hermes\\client\\src\\components\\Dashboard\\TaskList.js",["101"],"import React from 'react';\r\nimport {withTranslation} from 'react-i18next';\r\n\r\nimport getJwtDataFromSessionStorage from '../../middleware/jwtSessionStorage';\r\n\r\nimport '../../assets/css/dashboard.css';\r\n\r\nclass Tasks extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        var jwt = getJwtDataFromSessionStorage();\r\n\r\n        if(jwt != null) {\r\n            this.state = {\r\n                auth: {\r\n                    userId: jwt.userId,\r\n                    refreshToken: jwt.refreshToken\r\n                }\r\n            }\r\n        } else {\r\n            this.state = {\r\n                auth: {\r\n                    userId: null,\r\n                    refreshToken: null\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {t} = this.props;\r\n        return(\r\n            <table class=\"tab-table\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Name</th>\r\n                        <th>Points</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td>Dom</td>\r\n                        <td>6000</td>\r\n                    </tr>\r\n                    <tr class=\"active-row\">\r\n                        <td>Melissa</td>\r\n                        <td>5150</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Dom</td>\r\n                        <td>6000</td>\r\n                    </tr>\r\n                    <tr class=\"active-row\">\r\n                        <td>Melissa</td>\r\n                        <td>5150</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Dom</td>\r\n                        <td>6000</td>\r\n                    </tr>\r\n                    <tr class=\"active-row\">\r\n                        <td>Melissa</td>\r\n                        <td>5150</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Dom</td>\r\n                        <td>6000</td>\r\n                    </tr>\r\n                    <tr class=\"active-row\">\r\n                        <td>Melissa</td>\r\n                        <td>5150</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Dom</td>\r\n                        <td>6000</td>\r\n                    </tr>\r\n                    <tr class=\"active-row\">\r\n                        <td>Melissa</td>\r\n                        <td>5150</td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        )\r\n    }    \r\n}\r\n\r\nconst TasksTranslation = withTranslation('common')(Tasks);\r\n\r\nexport default TasksTranslation;","D:\\studia\\PRACA DYPLOMOWA\\hermes\\client\\src\\components\\Dashboard\\UserList.js",["102"],"import React from 'react';\r\nimport {withTranslation} from 'react-i18next';\r\n\r\nimport getJwtDataFromSessionStorage from '../../middleware/jwtSessionStorage';\r\n\r\nimport '../../assets/css/dashboard.css';\r\n\r\nclass Team extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        var jwt = getJwtDataFromSessionStorage();\r\n\r\n        if(jwt != null) {\r\n            this.state = {\r\n                auth: {\r\n                    userId: jwt.userId,\r\n                    refreshToken: jwt.refreshToken\r\n                }\r\n            }\r\n        } else {\r\n            this.state = {\r\n                auth: {\r\n                    userId: null,\r\n                    refreshToken: null\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {t} = this.props;\r\n        return(\r\n            <table class=\"tab-table\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Name</th>\r\n                        <th>Points</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td>Dom</td>\r\n                        <td>6000</td>\r\n                    </tr>\r\n                    <tr class=\"active-row\">\r\n                        <td>Melissa</td>\r\n                        <td>5150</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Dom</td>\r\n                        <td>6000</td>\r\n                    </tr>\r\n                    <tr class=\"active-row\">\r\n                        <td>Melissa</td>\r\n                        <td>5150</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Dom</td>\r\n                        <td>6000</td>\r\n                    </tr>\r\n                    <tr class=\"active-row\">\r\n                        <td>Melissa</td>\r\n                        <td>5150</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Dom</td>\r\n                        <td>6000</td>\r\n                    </tr>\r\n                    <tr class=\"active-row\">\r\n                        <td>Melissa</td>\r\n                        <td>5150</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Dom</td>\r\n                        <td>6000</td>\r\n                    </tr>\r\n                    <tr class=\"active-row\">\r\n                        <td>Melissa</td>\r\n                        <td>5150</td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        )\r\n    }    \r\n}\r\n\r\nconst TeamTranslation = withTranslation('common')(Team);\r\n\r\nexport default TeamTranslation;","D:\\studia\\PRACA DYPLOMOWA\\hermes\\client\\src\\components\\Dashboard\\ActivityList.js",["103","104"],"import React from 'react';\r\nimport {withTranslation} from 'react-i18next';\r\n\r\nimport Login from '../Nav/Login';\r\n\r\nimport getJwtDataFromSessionStorage from '../../middleware/jwtSessionStorage';\r\n\r\nimport '../../assets/css/dashboard.css';\r\n\r\nclass Activities extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        var jwt = getJwtDataFromSessionStorage();\r\n\r\n        if(jwt != null) {\r\n            this.state = {\r\n                auth: {\r\n                    userId: jwt.userId,\r\n                    refreshToken: jwt.refreshToken\r\n                }\r\n            }\r\n        } else {\r\n            this.state = {\r\n                auth: {\r\n                    userId: null,\r\n                    refreshToken: null\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {t, i18n} = this.props;\r\n\r\n        if((this.state.auth.userId !== '' && this.state.auth.userId !== 'undefined' && this.state.auth.userId !== null) && (this.state.auth.refreshToken !== '' && this.state.auth.refreshToken !== 'undefined' && this.state.auth.refreshToken !== null)) {\r\n            return(\r\n                <table class=\"tab-table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Name</th>\r\n                            <th>Points</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>Dom</td>\r\n                            <td>6000</td>\r\n                        </tr>\r\n                        <tr class=\"active-row\">\r\n                            <td>Melissa</td>\r\n                            <td>5150</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Dom</td>\r\n                            <td>6000</td>\r\n                        </tr>\r\n                        <tr class=\"active-row\">\r\n                            <td>Melissa</td>\r\n                            <td>5150</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Dom</td>\r\n                            <td>6000</td>\r\n                        </tr>\r\n                        <tr class=\"active-row\">\r\n                            <td>Melissa</td>\r\n                            <td>5150</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Dom</td>\r\n                            <td>6000</td>\r\n                        </tr>\r\n                        <tr class=\"active-row\">\r\n                            <td>Melissa</td>\r\n                            <td>5150</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Dom</td>\r\n                            <td>6000</td>\r\n                        </tr>\r\n                        <tr class=\"active-row\">\r\n                            <td>Melissa</td>\r\n                            <td>5150</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            )\r\n        } else {\r\n            return <Login />\r\n        }\r\n    }    \r\n}\r\n\r\nconst ActivitiesTranslation = withTranslation('common')(Activities);\r\n\r\nexport default ActivitiesTranslation;","D:\\studia\\PRACA DYPLOMOWA\\hermes\\client\\src\\components\\Dashboard\\Recent.js",["105"],"import React from 'react';\r\nimport {withTranslation} from 'react-i18next';\r\n\r\nimport getJwtDataFromSessionStorage from '../../middleware/jwtSessionStorage';\r\n\r\nimport '../../assets/css/dashboard.css';\r\n\r\nclass Recent extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        var jwt = getJwtDataFromSessionStorage();\r\n\r\n        if(jwt != null) {\r\n            this.state = {\r\n                auth: {\r\n                    userId: jwt.userId,\r\n                    refreshToken: jwt.refreshToken\r\n                }\r\n            }\r\n        } else {\r\n            this.state = {\r\n                auth: {\r\n                    userId: null,\r\n                    refreshToken: null\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {t} = this.props;\r\n        return(\r\n            <table class=\"tab-table\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Name</th>\r\n                        <th>Points</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td>Dom</td>\r\n                        <td>6000</td>\r\n                    </tr>\r\n                    <tr class=\"active-row\">\r\n                        <td>Melissa</td>\r\n                        <td>5150</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Dom</td>\r\n                        <td>6000</td>\r\n                    </tr>\r\n                    <tr class=\"active-row\">\r\n                        <td>Melissa</td>\r\n                        <td>5150</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Dom</td>\r\n                        <td>6000</td>\r\n                    </tr>\r\n                    <tr class=\"active-row\">\r\n                        <td>Melissa</td>\r\n                        <td>5150</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Dom</td>\r\n                        <td>6000</td>\r\n                    </tr>\r\n                    <tr class=\"active-row\">\r\n                        <td>Melissa</td>\r\n                        <td>5150</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Dom</td>\r\n                        <td>6000</td>\r\n                    </tr>\r\n                    <tr class=\"active-row\">\r\n                        <td>Melissa</td>\r\n                        <td>5150</td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        )\r\n    }    \r\n}\r\n\r\nconst RecentTranslation = withTranslation('common')(Recent);\r\n\r\nexport default RecentTranslation;","D:\\studia\\PRACA DYPLOMOWA\\hermes\\client\\src\\components\\Project\\Project.js",[],"D:\\studia\\PRACA DYPLOMOWA\\hermes\\client\\src\\services\\i18n.js",[],"D:\\studia\\PRACA DYPLOMOWA\\hermes\\client\\src\\components\\Project\\NewProject.js",["106","107","108"],"import React from 'react';\r\nimport {withTranslation} from 'react-i18next';\r\nimport {Link} from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nimport '../../assets/css/register.css';\r\nimport '../../assets/css/style.css';\r\nimport '../../assets/css/errors.css';\r\n\r\nclass NewProject extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            auth: {\r\n                refreshToken: '',\r\n                accessToken: '',\r\n                userId: '',\r\n            },\r\n            fields: {},\r\n            errors: {}\r\n        };\r\n    }\r\n\r\n    componentDidMount(props) {\r\n        this.setState({\r\n            auth: {\r\n                ...this.state.auth,\r\n                userId: this.props.userId,\r\n                refreshToken: this.props.refreshToken\r\n            }\r\n        })\r\n    }\r\n\r\n    onChange(field, event) {\r\n        let fields = this.state.fields;\r\n        let errors = this.state.errors;\r\n        fields[field] = event.target.value;       \r\n        errors[field] = '';\r\n        this.setState({fields});\r\n    }\r\n\r\n    onFormSubmit = (event, errors) => {\r\n        event.preventDefault();\r\n        const {t} = this.props;\r\n        const fields = this.state.fields;\r\n\r\n        axios.post('http://localhost:3300/project/create', {\r\n            name: fields['name'],\r\n            category: fields['category'],\r\n            requirements: fields['requirements'],\r\n            userId: this.state.auth.userId,\r\n            due_date: fields['due_date']\r\n        }).then((response) => {\r\n            if(response) {\r\n                console.log(response.data);\r\n            } else {\r\n                console.log('Could not retrieve response data');\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.log(error);\r\n        }) \r\n    }\r\n\r\n    render() {\r\n        const {t} = this.props;\r\n        return(\r\n            <div className=\"card\">\r\n                <p className=\"card-title\">Create new project</p><hr className=\"card-hr\" />\r\n                <form className=\"card-form\" onSubmit={this.onFormSubmit}>\r\n                    <label htmlFor=\"name\">Project name</label>\r\n                    <input onChange={this.onChange.bind(this, 'name')} value={this.state.fields['name']} type=\"name\" className=\"\" name=\"name\" />\r\n                    <span className=\"error-msg-span\">{this.state.errors[\"name\"]}</span>\r\n                    <label htmlFor=\"category\">Category</label>\r\n                    <select onChange={this.onChange.bind(this, 'category')} value={this.state.fields['category']} type=\"category\" className=\"\" name=\"category\">\r\n                        <option value=\"Software Development\" default>Software Development</option>\r\n                        <option value=\"DevOps\">DevOps</option>\r\n                        <option value=\"Databases\">Databases</option>\r\n                        <option value=\"R&D\">R&D</option>\r\n                    </select>\r\n                    <span className=\"error-msg-span\">{this.state.errors[\"category\"]}</span>\r\n                    <label htmlFor=\"requirements\">Requirements</label>\r\n                    <textarea onChange={this.onChange.bind(this, 'requirements')} value={this.state.fields['requirements']} type=\"requirements\" className=\"\" name=\"requirements\" />\r\n                    <span className=\"error-msg-span\">{this.state.errors[\"requirements\"]}</span>\r\n                    <label htmlFor=\"due_date\">Due date</label>\r\n                    <input onChange={this.onChange.bind(this, 'due_date')} value={this.state.fields['due_date']} type=\"date\" className=\"\" name=\"due_date\"\r\n                        min=\"2021-02-01\" max=\"2022-12-31\" />\r\n                    <span className=\"error-msg-span\">{this.state.errors[\"due_date\"]}</span>\r\n                    <div class=\"card-form-divider\">\r\n                        <button type=\"submit\" className=\"card-form-button\">Create</button>\r\n                        <button type=\"reset\" className=\"card-form-button\" >Reset</button>\r\n                        <button type=\"button\" className=\"card-form-button\"><Link to=\"/dashboard\" className=\"card-form-button-link\">Cancel</Link></button>\r\n                    </div>\r\n                    <span className=\"error-msg-span\" id=\"serverErrorMsg\"></span>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NewProject;","D:\\studia\\PRACA DYPLOMOWA\\hermes\\client\\src\\middleware\\jwtSessionStorage.js",[],"D:\\studia\\PRACA DYPLOMOWA\\hermes\\client\\src\\middleware\\languageLocalStorage.js",[],{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","severity":1,"message":"114","line":6,"column":8,"nodeType":"115","messageId":"116","endLine":6,"endColumn":13},{"ruleId":"113","severity":1,"message":"117","line":30,"column":19,"nodeType":"115","messageId":"116","endLine":30,"endColumn":23},{"ruleId":"113","severity":1,"message":"114","line":14,"column":8,"nodeType":"115","messageId":"116","endLine":14,"endColumn":13},{"ruleId":"113","severity":1,"message":"117","line":50,"column":19,"nodeType":"115","messageId":"116","endLine":50,"endColumn":23},{"ruleId":"113","severity":1,"message":"118","line":7,"column":8,"nodeType":"115","messageId":"116","endLine":7,"endColumn":17},{"ruleId":"113","severity":1,"message":"117","line":119,"column":19,"nodeType":"115","messageId":"116","endLine":119,"endColumn":23},{"ruleId":"113","severity":1,"message":"119","line":8,"column":8,"nodeType":"115","messageId":"116","endLine":8,"endColumn":19},{"ruleId":"113","severity":1,"message":"120","line":9,"column":8,"nodeType":"115","messageId":"116","endLine":9,"endColumn":18},{"ruleId":"113","severity":1,"message":"121","line":71,"column":16,"nodeType":"115","messageId":"116","endLine":71,"endColumn":17},{"ruleId":"113","severity":1,"message":"117","line":71,"column":19,"nodeType":"115","messageId":"116","endLine":71,"endColumn":23},{"ruleId":"113","severity":1,"message":"121","line":31,"column":16,"nodeType":"115","messageId":"116","endLine":31,"endColumn":17},{"ruleId":"113","severity":1,"message":"121","line":31,"column":16,"nodeType":"115","messageId":"116","endLine":31,"endColumn":17},{"ruleId":"113","severity":1,"message":"121","line":33,"column":16,"nodeType":"115","messageId":"116","endLine":33,"endColumn":17},{"ruleId":"113","severity":1,"message":"117","line":33,"column":19,"nodeType":"115","messageId":"116","endLine":33,"endColumn":23},{"ruleId":"113","severity":1,"message":"121","line":31,"column":16,"nodeType":"115","messageId":"116","endLine":31,"endColumn":17},{"ruleId":"113","severity":1,"message":"122","line":2,"column":9,"nodeType":"115","messageId":"116","endLine":2,"endColumn":24},{"ruleId":"113","severity":1,"message":"121","line":44,"column":16,"nodeType":"115","messageId":"116","endLine":44,"endColumn":17},{"ruleId":"113","severity":1,"message":"121","line":66,"column":16,"nodeType":"115","messageId":"116","endLine":66,"endColumn":17},"no-native-reassign",["123"],"no-negated-in-lhs",["124"],"no-unused-vars","'Login' is defined but never used.","Identifier","unusedVar","'i18n' is assigned a value but never used.","'Dashboard' is defined but never used.","'ProjectItem' is defined but never used.","'NewProject' is defined but never used.","'t' is assigned a value but never used.","'withTranslation' is defined but never used.","no-global-assign","no-unsafe-negation"]